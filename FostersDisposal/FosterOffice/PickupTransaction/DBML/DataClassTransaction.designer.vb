'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="DISPOSALDATA")>  _
Partial Public Class DisposalData
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertCollectionRecord(instance As CollectionRecord)
    End Sub
  Partial Private Sub UpdateCollectionRecord(instance As CollectionRecord)
    End Sub
  Partial Private Sub DeleteCollectionRecord(instance As CollectionRecord)
    End Sub
  Partial Private Sub InsertTransactions(instance As Transactions)
    End Sub
  Partial Private Sub UpdateTransactions(instance As Transactions)
    End Sub
  Partial Private Sub DeleteTransactions(instance As Transactions)
    End Sub
  Partial Private Sub InsertVacationCredit(instance As VacationCredit)
    End Sub
  Partial Private Sub UpdateVacationCredit(instance As VacationCredit)
    End Sub
  Partial Private Sub DeleteVacationCredit(instance As VacationCredit)
    End Sub
  Partial Private Sub InsertCustomer(instance As Customer)
    End Sub
  Partial Private Sub UpdateCustomer(instance As Customer)
    End Sub
  Partial Private Sub DeleteCustomer(instance As Customer)
    End Sub
  Partial Private Sub InsertRecycleListing(instance As RecycleListing)
    End Sub
  Partial Private Sub UpdateRecycleListing(instance As RecycleListing)
    End Sub
  Partial Private Sub DeleteRecycleListing(instance As RecycleListing)
    End Sub
  Partial Private Sub InsertRentalTransaction(instance As RentalTransaction)
    End Sub
  Partial Private Sub UpdateRentalTransaction(instance As RentalTransaction)
    End Sub
  Partial Private Sub DeleteRentalTransaction(instance As RentalTransaction)
    End Sub
  Partial Private Sub InsertRentalRouteData(instance As RentalRouteData)
    End Sub
  Partial Private Sub UpdateRentalRouteData(instance As RentalRouteData)
    End Sub
  Partial Private Sub DeleteRentalRouteData(instance As RentalRouteData)
    End Sub
  Partial Private Sub InsertRentalPickupInformation(instance As RentalPickupInformation)
    End Sub
  Partial Private Sub UpdateRentalPickupInformation(instance As RentalPickupInformation)
    End Sub
  Partial Private Sub DeleteRentalPickupInformation(instance As RentalPickupInformation)
    End Sub
  Partial Private Sub InsertRentalCustomer(instance As RentalCustomer)
    End Sub
  Partial Private Sub UpdateRentalCustomer(instance As RentalCustomer)
    End Sub
  Partial Private Sub DeleteRentalCustomer(instance As RentalCustomer)
    End Sub
  Partial Private Sub InsertRentalPayment(instance As RentalPayment)
    End Sub
  Partial Private Sub UpdateRentalPayment(instance As RentalPayment)
    End Sub
  Partial Private Sub DeleteRentalPayment(instance As RentalPayment)
    End Sub
  Partial Private Sub InsertPayments(instance As Payments)
    End Sub
  Partial Private Sub UpdatePayments(instance As Payments)
    End Sub
  Partial Private Sub DeletePayments(instance As Payments)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.PickupTransaction.My.MySettings.Default.DISPOSALDATAConnectionString6, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property CollectionRecords() As System.Data.Linq.Table(Of CollectionRecord)
		Get
			Return Me.GetTable(Of CollectionRecord)
		End Get
	End Property
	
	Public ReadOnly Property Transactions() As System.Data.Linq.Table(Of Transactions)
		Get
			Return Me.GetTable(Of Transactions)
		End Get
	End Property
	
	Public ReadOnly Property VacationCredits() As System.Data.Linq.Table(Of VacationCredit)
		Get
			Return Me.GetTable(Of VacationCredit)
		End Get
	End Property
	
	Public ReadOnly Property Customers() As System.Data.Linq.Table(Of Customer)
		Get
			Return Me.GetTable(Of Customer)
		End Get
	End Property
	
	Public ReadOnly Property RecycleListings() As System.Data.Linq.Table(Of RecycleListing)
		Get
			Return Me.GetTable(Of RecycleListing)
		End Get
	End Property
	
	Public ReadOnly Property RentalTransactions() As System.Data.Linq.Table(Of RentalTransaction)
		Get
			Return Me.GetTable(Of RentalTransaction)
		End Get
	End Property
	
	Public ReadOnly Property RentalRouteDatas() As System.Data.Linq.Table(Of RentalRouteData)
		Get
			Return Me.GetTable(Of RentalRouteData)
		End Get
	End Property
	
	Public ReadOnly Property RentalPickupInformations() As System.Data.Linq.Table(Of RentalPickupInformation)
		Get
			Return Me.GetTable(Of RentalPickupInformation)
		End Get
	End Property
	
	Public ReadOnly Property RentalCustomers() As System.Data.Linq.Table(Of RentalCustomer)
		Get
			Return Me.GetTable(Of RentalCustomer)
		End Get
	End Property
	
	Public ReadOnly Property RentalPayments() As System.Data.Linq.Table(Of RentalPayment)
		Get
			Return Me.GetTable(Of RentalPayment)
		End Get
	End Property
	
	Public ReadOnly Property Payments() As System.Data.Linq.Table(Of Payments)
		Get
			Return Me.GetTable(Of Payments)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="CollectionRecords")>  _
Partial Public Class CollectionRecord
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _CustomerID As Integer
	
	Private _DateCollected As Date
	
	Private _Quantity As Integer
	
	Private _ItemID As Integer
	
	Private _ID As Integer
	
	Private _ItemDescription As String
	
	Private _ItemPrice As Double
	
	Private _RouteDescription As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCustomerIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnCustomerIDChanged()
    End Sub
    Partial Private Sub OnDateCollectedChanging(value As Date)
    End Sub
    Partial Private Sub OnDateCollectedChanged()
    End Sub
    Partial Private Sub OnQuantityChanging(value As Integer)
    End Sub
    Partial Private Sub OnQuantityChanged()
    End Sub
    Partial Private Sub OnItemIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnItemIDChanged()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnItemDescriptionChanging(value As String)
    End Sub
    Partial Private Sub OnItemDescriptionChanged()
    End Sub
    Partial Private Sub OnItemPriceChanging(value As Double)
    End Sub
    Partial Private Sub OnItemPriceChanged()
    End Sub
    Partial Private Sub OnRouteDescriptionChanging(value As String)
    End Sub
    Partial Private Sub OnRouteDescriptionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CustomerID", DbType:="Int NOT NULL")>  _
	Public Property CustomerID() As Integer
		Get
			Return Me._CustomerID
		End Get
		Set
			If ((Me._CustomerID = value)  _
						= false) Then
				Me.OnCustomerIDChanging(value)
				Me.SendPropertyChanging
				Me._CustomerID = value
				Me.SendPropertyChanged("CustomerID")
				Me.OnCustomerIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateCollected", DbType:="DateTime NOT NULL")>  _
	Public Property DateCollected() As Date
		Get
			Return Me._DateCollected
		End Get
		Set
			If ((Me._DateCollected = value)  _
						= false) Then
				Me.OnDateCollectedChanging(value)
				Me.SendPropertyChanging
				Me._DateCollected = value
				Me.SendPropertyChanged("DateCollected")
				Me.OnDateCollectedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Quantity", DbType:="Int NOT NULL")>  _
	Public Property Quantity() As Integer
		Get
			Return Me._Quantity
		End Get
		Set
			If ((Me._Quantity = value)  _
						= false) Then
				Me.OnQuantityChanging(value)
				Me.SendPropertyChanging
				Me._Quantity = value
				Me.SendPropertyChanged("Quantity")
				Me.OnQuantityChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ItemID", DbType:="Int NOT NULL")>  _
	Public Property ItemID() As Integer
		Get
			Return Me._ItemID
		End Get
		Set
			If ((Me._ItemID = value)  _
						= false) Then
				Me.OnItemIDChanging(value)
				Me.SendPropertyChanging
				Me._ItemID = value
				Me.SendPropertyChanged("ItemID")
				Me.OnItemIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ItemDescription", DbType:="NVarChar(100)")>  _
	Public Property ItemDescription() As String
		Get
			Return Me._ItemDescription
		End Get
		Set
			If (String.Equals(Me._ItemDescription, value) = false) Then
				Me.OnItemDescriptionChanging(value)
				Me.SendPropertyChanging
				Me._ItemDescription = value
				Me.SendPropertyChanged("ItemDescription")
				Me.OnItemDescriptionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ItemPrice", DbType:="Float NOT NULL")>  _
	Public Property ItemPrice() As Double
		Get
			Return Me._ItemPrice
		End Get
		Set
			If ((Me._ItemPrice = value)  _
						= false) Then
				Me.OnItemPriceChanging(value)
				Me.SendPropertyChanging
				Me._ItemPrice = value
				Me.SendPropertyChanged("ItemPrice")
				Me.OnItemPriceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RouteDescription", DbType:="NVarChar(20)")>  _
	Public Property RouteDescription() As String
		Get
			Return Me._RouteDescription
		End Get
		Set
			If (String.Equals(Me._RouteDescription, value) = false) Then
				Me.OnRouteDescriptionChanging(value)
				Me.SendPropertyChanging
				Me._RouteDescription = value
				Me.SendPropertyChanged("RouteDescription")
				Me.OnRouteDescriptionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Transactions")>  _
Partial Public Class Transactions
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _TransDate As Date
	
	Private _Amount As Decimal
	
	Private _Description As String
	
	Private _Reference As String
	
	Private _CustomerID As Integer
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnTransDateChanging(value As Date)
    End Sub
    Partial Private Sub OnTransDateChanged()
    End Sub
    Partial Private Sub OnAmountChanging(value As Decimal)
    End Sub
    Partial Private Sub OnAmountChanged()
    End Sub
    Partial Private Sub OnDescriptionChanging(value As String)
    End Sub
    Partial Private Sub OnDescriptionChanged()
    End Sub
    Partial Private Sub OnReferenceChanging(value As String)
    End Sub
    Partial Private Sub OnReferenceChanged()
    End Sub
    Partial Private Sub OnCustomerIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnCustomerIDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TransDate", DbType:="DateTime NOT NULL")>  _
	Public Property TransDate() As Date
		Get
			Return Me._TransDate
		End Get
		Set
			If ((Me._TransDate = value)  _
						= false) Then
				Me.OnTransDateChanging(value)
				Me.SendPropertyChanging
				Me._TransDate = value
				Me.SendPropertyChanged("TransDate")
				Me.OnTransDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Amount", DbType:="Money NOT NULL")>  _
	Public Property Amount() As Decimal
		Get
			Return Me._Amount
		End Get
		Set
			If ((Me._Amount = value)  _
						= false) Then
				Me.OnAmountChanging(value)
				Me.SendPropertyChanging
				Me._Amount = value
				Me.SendPropertyChanged("Amount")
				Me.OnAmountChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="NVarChar(100) NOT NULL", CanBeNull:=false)>  _
	Public Property Description() As String
		Get
			Return Me._Description
		End Get
		Set
			If (String.Equals(Me._Description, value) = false) Then
				Me.OnDescriptionChanging(value)
				Me.SendPropertyChanging
				Me._Description = value
				Me.SendPropertyChanged("Description")
				Me.OnDescriptionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Reference", DbType:="NVarChar(20)")>  _
	Public Property Reference() As String
		Get
			Return Me._Reference
		End Get
		Set
			If (String.Equals(Me._Reference, value) = false) Then
				Me.OnReferenceChanging(value)
				Me.SendPropertyChanging
				Me._Reference = value
				Me.SendPropertyChanged("Reference")
				Me.OnReferenceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CustomerID", DbType:="Int NOT NULL")>  _
	Public Property CustomerID() As Integer
		Get
			Return Me._CustomerID
		End Get
		Set
			If ((Me._CustomerID = value)  _
						= false) Then
				Me.OnCustomerIDChanging(value)
				Me.SendPropertyChanging
				Me._CustomerID = value
				Me.SendPropertyChanged("CustomerID")
				Me.OnCustomerIDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.VacationCredits")>  _
Partial Public Class VacationCredit
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _CustomerNumber As Integer
	
	Private _DateStart As Date
	
	Private _DateEnd As Date
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnCustomerNumberChanging(value As Integer)
    End Sub
    Partial Private Sub OnCustomerNumberChanged()
    End Sub
    Partial Private Sub OnDateStartChanging(value As Date)
    End Sub
    Partial Private Sub OnDateStartChanged()
    End Sub
    Partial Private Sub OnDateEndChanging(value As Date)
    End Sub
    Partial Private Sub OnDateEndChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CustomerNumber", DbType:="Int NOT NULL")>  _
	Public Property CustomerNumber() As Integer
		Get
			Return Me._CustomerNumber
		End Get
		Set
			If ((Me._CustomerNumber = value)  _
						= false) Then
				Me.OnCustomerNumberChanging(value)
				Me.SendPropertyChanging
				Me._CustomerNumber = value
				Me.SendPropertyChanged("CustomerNumber")
				Me.OnCustomerNumberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateStart", DbType:="Date NOT NULL")>  _
	Public Property DateStart() As Date
		Get
			Return Me._DateStart
		End Get
		Set
			If ((Me._DateStart = value)  _
						= false) Then
				Me.OnDateStartChanging(value)
				Me.SendPropertyChanging
				Me._DateStart = value
				Me.SendPropertyChanged("DateStart")
				Me.OnDateStartChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateEnd", DbType:="Date NOT NULL")>  _
	Public Property DateEnd() As Date
		Get
			Return Me._DateEnd
		End Get
		Set
			If ((Me._DateEnd = value)  _
						= false) Then
				Me.OnDateEndChanging(value)
				Me.SendPropertyChanging
				Me._DateEnd = value
				Me.SendPropertyChanged("DateEnd")
				Me.OnDateEndChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Customers")>  _
Partial Public Class Customer
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _CustomerNumber As Integer
	
	Private _SequenceNumber As Integer
	
	Private _RouteLocation_FirstName As String
	
	Private _RouteLocation_LastName As String
	
	Private _RouteLocation_Address As String
	
	Private _RouteLocation_City As String
	
	Private _RouteLocation_State As String
	
	Private _RouteLocation_ZipCode As String
	
	Private _Billing_FirstName As String
	
	Private _Billing_LastName As String
	
	Private _Billing_Address As String
	
	Private _Billing_City As String
	
	Private _Billing_State As String
	
	Private _Billing_ZipCode As String
	
	Private _BusinessPhone As String
	
	Private _HomePhone As String
	
	Private _PickupDay As System.Nullable(Of Integer)
	
	Private _BillingSameAsRoute As System.Nullable(Of Boolean)
	
	Private _TaxRate As System.Nullable(Of Double)
	
	Private _BillingType As System.Nullable(Of Integer)
	
	Private _SpecialInstructions As String
	
	Private _Route As System.Nullable(Of Integer)
	
	Private _LastMonthBilled As Integer
	
	Private _MonthsToBill As Integer
	
	Private _LastPaymentAmount As System.Nullable(Of Double)
	
	Private _LastPaymentDate As System.Nullable(Of Date)
	
	Private _Balance As System.Nullable(Of Double)
	
	Private _AdditionalChargeDesc1 As String
	
	Private _AdditionalChargeDesc2 As String
	
	Private _Comments As String
	
	Private _CurrentBalance As System.Nullable(Of Double)
	
	Private _CurrentBalanceDate As System.Nullable(Of Date)
	
	Private _AgingBalanceCurrent As System.Nullable(Of Double)
	
	Private _AgingBalance3Month As System.Nullable(Of Double)
	
	Private _AgingBalance4Month As System.Nullable(Of Double)
	
	Private _AgingBalance5Month As System.Nullable(Of Double)
	
	Private _PreviousMonthBilled As System.Nullable(Of Integer)
	
	Private _GoInAfter As System.Nullable(Of Boolean)
	
	Private _GoInAfterAmount As System.Nullable(Of Double)
	
	Private _SendToCollections As System.Nullable(Of Boolean)
	
	Private _ContinueBilling As System.Nullable(Of Boolean)
	
	Private _CollectionNotes As String
	
	Private _YellowTab As System.Nullable(Of Boolean)
	
	Private _PreviousSequenceNumber As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCustomerNumberChanging(value As Integer)
    End Sub
    Partial Private Sub OnCustomerNumberChanged()
    End Sub
    Partial Private Sub OnSequenceNumberChanging(value As Integer)
    End Sub
    Partial Private Sub OnSequenceNumberChanged()
    End Sub
    Partial Private Sub OnRouteLocation_FirstNameChanging(value As String)
    End Sub
    Partial Private Sub OnRouteLocation_FirstNameChanged()
    End Sub
    Partial Private Sub OnRouteLocation_LastNameChanging(value As String)
    End Sub
    Partial Private Sub OnRouteLocation_LastNameChanged()
    End Sub
    Partial Private Sub OnRouteLocation_AddressChanging(value As String)
    End Sub
    Partial Private Sub OnRouteLocation_AddressChanged()
    End Sub
    Partial Private Sub OnRouteLocation_CityChanging(value As String)
    End Sub
    Partial Private Sub OnRouteLocation_CityChanged()
    End Sub
    Partial Private Sub OnRouteLocation_StateChanging(value As String)
    End Sub
    Partial Private Sub OnRouteLocation_StateChanged()
    End Sub
    Partial Private Sub OnRouteLocation_ZipCodeChanging(value As String)
    End Sub
    Partial Private Sub OnRouteLocation_ZipCodeChanged()
    End Sub
    Partial Private Sub OnBilling_FirstNameChanging(value As String)
    End Sub
    Partial Private Sub OnBilling_FirstNameChanged()
    End Sub
    Partial Private Sub OnBilling_LastNameChanging(value As String)
    End Sub
    Partial Private Sub OnBilling_LastNameChanged()
    End Sub
    Partial Private Sub OnBilling_AddressChanging(value As String)
    End Sub
    Partial Private Sub OnBilling_AddressChanged()
    End Sub
    Partial Private Sub OnBilling_CityChanging(value As String)
    End Sub
    Partial Private Sub OnBilling_CityChanged()
    End Sub
    Partial Private Sub OnBilling_StateChanging(value As String)
    End Sub
    Partial Private Sub OnBilling_StateChanged()
    End Sub
    Partial Private Sub OnBilling_ZipCodeChanging(value As String)
    End Sub
    Partial Private Sub OnBilling_ZipCodeChanged()
    End Sub
    Partial Private Sub OnBusinessPhoneChanging(value As String)
    End Sub
    Partial Private Sub OnBusinessPhoneChanged()
    End Sub
    Partial Private Sub OnHomePhoneChanging(value As String)
    End Sub
    Partial Private Sub OnHomePhoneChanged()
    End Sub
    Partial Private Sub OnPickupDayChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPickupDayChanged()
    End Sub
    Partial Private Sub OnBillingSameAsRouteChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnBillingSameAsRouteChanged()
    End Sub
    Partial Private Sub OnTaxRateChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnTaxRateChanged()
    End Sub
    Partial Private Sub OnBillingTypeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBillingTypeChanged()
    End Sub
    Partial Private Sub OnSpecialInstructionsChanging(value As String)
    End Sub
    Partial Private Sub OnSpecialInstructionsChanged()
    End Sub
    Partial Private Sub OnRouteChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnRouteChanged()
    End Sub
    Partial Private Sub OnLastMonthBilledChanging(value As Integer)
    End Sub
    Partial Private Sub OnLastMonthBilledChanged()
    End Sub
    Partial Private Sub OnMonthsToBillChanging(value As Integer)
    End Sub
    Partial Private Sub OnMonthsToBillChanged()
    End Sub
    Partial Private Sub OnLastPaymentAmountChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnLastPaymentAmountChanged()
    End Sub
    Partial Private Sub OnLastPaymentDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnLastPaymentDateChanged()
    End Sub
    Partial Private Sub OnBalanceChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnBalanceChanged()
    End Sub
    Partial Private Sub OnAdditionalChargeDesc1Changing(value As String)
    End Sub
    Partial Private Sub OnAdditionalChargeDesc1Changed()
    End Sub
    Partial Private Sub OnAdditionalChargeDesc2Changing(value As String)
    End Sub
    Partial Private Sub OnAdditionalChargeDesc2Changed()
    End Sub
    Partial Private Sub OnCommentsChanging(value As String)
    End Sub
    Partial Private Sub OnCommentsChanged()
    End Sub
    Partial Private Sub OnCurrentBalanceChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCurrentBalanceChanged()
    End Sub
    Partial Private Sub OnCurrentBalanceDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCurrentBalanceDateChanged()
    End Sub
    Partial Private Sub OnAgingBalanceCurrentChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnAgingBalanceCurrentChanged()
    End Sub
    Partial Private Sub OnAgingBalance3MonthChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnAgingBalance3MonthChanged()
    End Sub
    Partial Private Sub OnAgingBalance4MonthChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnAgingBalance4MonthChanged()
    End Sub
    Partial Private Sub OnAgingBalance5MonthChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnAgingBalance5MonthChanged()
    End Sub
    Partial Private Sub OnPreviousMonthBilledChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPreviousMonthBilledChanged()
    End Sub
    Partial Private Sub OnGoInAfterChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnGoInAfterChanged()
    End Sub
    Partial Private Sub OnGoInAfterAmountChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnGoInAfterAmountChanged()
    End Sub
    Partial Private Sub OnSendToCollectionsChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnSendToCollectionsChanged()
    End Sub
    Partial Private Sub OnContinueBillingChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnContinueBillingChanged()
    End Sub
    Partial Private Sub OnCollectionNotesChanging(value As String)
    End Sub
    Partial Private Sub OnCollectionNotesChanged()
    End Sub
    Partial Private Sub OnYellowTabChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnYellowTabChanged()
    End Sub
    Partial Private Sub OnPreviousSequenceNumberChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPreviousSequenceNumberChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CustomerNumber", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property CustomerNumber() As Integer
		Get
			Return Me._CustomerNumber
		End Get
		Set
			If ((Me._CustomerNumber = value)  _
						= false) Then
				Me.OnCustomerNumberChanging(value)
				Me.SendPropertyChanging
				Me._CustomerNumber = value
				Me.SendPropertyChanged("CustomerNumber")
				Me.OnCustomerNumberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SequenceNumber", DbType:="Int NOT NULL")>  _
	Public Property SequenceNumber() As Integer
		Get
			Return Me._SequenceNumber
		End Get
		Set
			If ((Me._SequenceNumber = value)  _
						= false) Then
				Me.OnSequenceNumberChanging(value)
				Me.SendPropertyChanging
				Me._SequenceNumber = value
				Me.SendPropertyChanged("SequenceNumber")
				Me.OnSequenceNumberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RouteLocation_FirstName", DbType:="NVarChar(15)")>  _
	Public Property RouteLocation_FirstName() As String
		Get
			Return Me._RouteLocation_FirstName
		End Get
		Set
			If (String.Equals(Me._RouteLocation_FirstName, value) = false) Then
				Me.OnRouteLocation_FirstNameChanging(value)
				Me.SendPropertyChanging
				Me._RouteLocation_FirstName = value
				Me.SendPropertyChanged("RouteLocation_FirstName")
				Me.OnRouteLocation_FirstNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RouteLocation_LastName", DbType:="NVarChar(20)")>  _
	Public Property RouteLocation_LastName() As String
		Get
			Return Me._RouteLocation_LastName
		End Get
		Set
			If (String.Equals(Me._RouteLocation_LastName, value) = false) Then
				Me.OnRouteLocation_LastNameChanging(value)
				Me.SendPropertyChanging
				Me._RouteLocation_LastName = value
				Me.SendPropertyChanged("RouteLocation_LastName")
				Me.OnRouteLocation_LastNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RouteLocation_Address", DbType:="NVarChar(100)")>  _
	Public Property RouteLocation_Address() As String
		Get
			Return Me._RouteLocation_Address
		End Get
		Set
			If (String.Equals(Me._RouteLocation_Address, value) = false) Then
				Me.OnRouteLocation_AddressChanging(value)
				Me.SendPropertyChanging
				Me._RouteLocation_Address = value
				Me.SendPropertyChanged("RouteLocation_Address")
				Me.OnRouteLocation_AddressChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RouteLocation_City", DbType:="NVarChar(30)")>  _
	Public Property RouteLocation_City() As String
		Get
			Return Me._RouteLocation_City
		End Get
		Set
			If (String.Equals(Me._RouteLocation_City, value) = false) Then
				Me.OnRouteLocation_CityChanging(value)
				Me.SendPropertyChanging
				Me._RouteLocation_City = value
				Me.SendPropertyChanged("RouteLocation_City")
				Me.OnRouteLocation_CityChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RouteLocation_State", DbType:="NVarChar(15)")>  _
	Public Property RouteLocation_State() As String
		Get
			Return Me._RouteLocation_State
		End Get
		Set
			If (String.Equals(Me._RouteLocation_State, value) = false) Then
				Me.OnRouteLocation_StateChanging(value)
				Me.SendPropertyChanging
				Me._RouteLocation_State = value
				Me.SendPropertyChanged("RouteLocation_State")
				Me.OnRouteLocation_StateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RouteLocation_ZipCode", DbType:="NVarChar(15)")>  _
	Public Property RouteLocation_ZipCode() As String
		Get
			Return Me._RouteLocation_ZipCode
		End Get
		Set
			If (String.Equals(Me._RouteLocation_ZipCode, value) = false) Then
				Me.OnRouteLocation_ZipCodeChanging(value)
				Me.SendPropertyChanging
				Me._RouteLocation_ZipCode = value
				Me.SendPropertyChanged("RouteLocation_ZipCode")
				Me.OnRouteLocation_ZipCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Billing_FirstName", DbType:="NVarChar(15)")>  _
	Public Property Billing_FirstName() As String
		Get
			Return Me._Billing_FirstName
		End Get
		Set
			If (String.Equals(Me._Billing_FirstName, value) = false) Then
				Me.OnBilling_FirstNameChanging(value)
				Me.SendPropertyChanging
				Me._Billing_FirstName = value
				Me.SendPropertyChanged("Billing_FirstName")
				Me.OnBilling_FirstNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Billing_LastName", DbType:="NVarChar(20)")>  _
	Public Property Billing_LastName() As String
		Get
			Return Me._Billing_LastName
		End Get
		Set
			If (String.Equals(Me._Billing_LastName, value) = false) Then
				Me.OnBilling_LastNameChanging(value)
				Me.SendPropertyChanging
				Me._Billing_LastName = value
				Me.SendPropertyChanged("Billing_LastName")
				Me.OnBilling_LastNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Billing_Address", DbType:="NVarChar(100)")>  _
	Public Property Billing_Address() As String
		Get
			Return Me._Billing_Address
		End Get
		Set
			If (String.Equals(Me._Billing_Address, value) = false) Then
				Me.OnBilling_AddressChanging(value)
				Me.SendPropertyChanging
				Me._Billing_Address = value
				Me.SendPropertyChanged("Billing_Address")
				Me.OnBilling_AddressChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Billing_City", DbType:="NVarChar(30)")>  _
	Public Property Billing_City() As String
		Get
			Return Me._Billing_City
		End Get
		Set
			If (String.Equals(Me._Billing_City, value) = false) Then
				Me.OnBilling_CityChanging(value)
				Me.SendPropertyChanging
				Me._Billing_City = value
				Me.SendPropertyChanged("Billing_City")
				Me.OnBilling_CityChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Billing_State", DbType:="NVarChar(15)")>  _
	Public Property Billing_State() As String
		Get
			Return Me._Billing_State
		End Get
		Set
			If (String.Equals(Me._Billing_State, value) = false) Then
				Me.OnBilling_StateChanging(value)
				Me.SendPropertyChanging
				Me._Billing_State = value
				Me.SendPropertyChanged("Billing_State")
				Me.OnBilling_StateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Billing_ZipCode", DbType:="NVarChar(15)")>  _
	Public Property Billing_ZipCode() As String
		Get
			Return Me._Billing_ZipCode
		End Get
		Set
			If (String.Equals(Me._Billing_ZipCode, value) = false) Then
				Me.OnBilling_ZipCodeChanging(value)
				Me.SendPropertyChanging
				Me._Billing_ZipCode = value
				Me.SendPropertyChanged("Billing_ZipCode")
				Me.OnBilling_ZipCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BusinessPhone", DbType:="NVarChar(20)")>  _
	Public Property BusinessPhone() As String
		Get
			Return Me._BusinessPhone
		End Get
		Set
			If (String.Equals(Me._BusinessPhone, value) = false) Then
				Me.OnBusinessPhoneChanging(value)
				Me.SendPropertyChanging
				Me._BusinessPhone = value
				Me.SendPropertyChanged("BusinessPhone")
				Me.OnBusinessPhoneChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HomePhone", DbType:="NVarChar(20) NOT NULL", CanBeNull:=false)>  _
	Public Property HomePhone() As String
		Get
			Return Me._HomePhone
		End Get
		Set
			If (String.Equals(Me._HomePhone, value) = false) Then
				Me.OnHomePhoneChanging(value)
				Me.SendPropertyChanging
				Me._HomePhone = value
				Me.SendPropertyChanged("HomePhone")
				Me.OnHomePhoneChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PickupDay", DbType:="Int")>  _
	Public Property PickupDay() As System.Nullable(Of Integer)
		Get
			Return Me._PickupDay
		End Get
		Set
			If (Me._PickupDay.Equals(value) = false) Then
				Me.OnPickupDayChanging(value)
				Me.SendPropertyChanging
				Me._PickupDay = value
				Me.SendPropertyChanged("PickupDay")
				Me.OnPickupDayChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BillingSameAsRoute", DbType:="Bit")>  _
	Public Property BillingSameAsRoute() As System.Nullable(Of Boolean)
		Get
			Return Me._BillingSameAsRoute
		End Get
		Set
			If (Me._BillingSameAsRoute.Equals(value) = false) Then
				Me.OnBillingSameAsRouteChanging(value)
				Me.SendPropertyChanging
				Me._BillingSameAsRoute = value
				Me.SendPropertyChanged("BillingSameAsRoute")
				Me.OnBillingSameAsRouteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TaxRate", DbType:="Float")>  _
	Public Property TaxRate() As System.Nullable(Of Double)
		Get
			Return Me._TaxRate
		End Get
		Set
			If (Me._TaxRate.Equals(value) = false) Then
				Me.OnTaxRateChanging(value)
				Me.SendPropertyChanging
				Me._TaxRate = value
				Me.SendPropertyChanged("TaxRate")
				Me.OnTaxRateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BillingType", DbType:="Int")>  _
	Public Property BillingType() As System.Nullable(Of Integer)
		Get
			Return Me._BillingType
		End Get
		Set
			If (Me._BillingType.Equals(value) = false) Then
				Me.OnBillingTypeChanging(value)
				Me.SendPropertyChanging
				Me._BillingType = value
				Me.SendPropertyChanged("BillingType")
				Me.OnBillingTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SpecialInstructions", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property SpecialInstructions() As String
		Get
			Return Me._SpecialInstructions
		End Get
		Set
			If (String.Equals(Me._SpecialInstructions, value) = false) Then
				Me.OnSpecialInstructionsChanging(value)
				Me.SendPropertyChanging
				Me._SpecialInstructions = value
				Me.SendPropertyChanged("SpecialInstructions")
				Me.OnSpecialInstructionsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Route", DbType:="Int")>  _
	Public Property Route() As System.Nullable(Of Integer)
		Get
			Return Me._Route
		End Get
		Set
			If (Me._Route.Equals(value) = false) Then
				Me.OnRouteChanging(value)
				Me.SendPropertyChanging
				Me._Route = value
				Me.SendPropertyChanged("Route")
				Me.OnRouteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LastMonthBilled", DbType:="Int NOT NULL")>  _
	Public Property LastMonthBilled() As Integer
		Get
			Return Me._LastMonthBilled
		End Get
		Set
			If ((Me._LastMonthBilled = value)  _
						= false) Then
				Me.OnLastMonthBilledChanging(value)
				Me.SendPropertyChanging
				Me._LastMonthBilled = value
				Me.SendPropertyChanged("LastMonthBilled")
				Me.OnLastMonthBilledChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MonthsToBill", DbType:="Int NOT NULL")>  _
	Public Property MonthsToBill() As Integer
		Get
			Return Me._MonthsToBill
		End Get
		Set
			If ((Me._MonthsToBill = value)  _
						= false) Then
				Me.OnMonthsToBillChanging(value)
				Me.SendPropertyChanging
				Me._MonthsToBill = value
				Me.SendPropertyChanged("MonthsToBill")
				Me.OnMonthsToBillChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LastPaymentAmount", DbType:="Float")>  _
	Public Property LastPaymentAmount() As System.Nullable(Of Double)
		Get
			Return Me._LastPaymentAmount
		End Get
		Set
			If (Me._LastPaymentAmount.Equals(value) = false) Then
				Me.OnLastPaymentAmountChanging(value)
				Me.SendPropertyChanging
				Me._LastPaymentAmount = value
				Me.SendPropertyChanged("LastPaymentAmount")
				Me.OnLastPaymentAmountChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LastPaymentDate", DbType:="DateTime")>  _
	Public Property LastPaymentDate() As System.Nullable(Of Date)
		Get
			Return Me._LastPaymentDate
		End Get
		Set
			If (Me._LastPaymentDate.Equals(value) = false) Then
				Me.OnLastPaymentDateChanging(value)
				Me.SendPropertyChanging
				Me._LastPaymentDate = value
				Me.SendPropertyChanged("LastPaymentDate")
				Me.OnLastPaymentDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Balance", DbType:="Float")>  _
	Public Property Balance() As System.Nullable(Of Double)
		Get
			Return Me._Balance
		End Get
		Set
			If (Me._Balance.Equals(value) = false) Then
				Me.OnBalanceChanging(value)
				Me.SendPropertyChanging
				Me._Balance = value
				Me.SendPropertyChanged("Balance")
				Me.OnBalanceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdditionalChargeDesc1", DbType:="NVarChar(100)")>  _
	Public Property AdditionalChargeDesc1() As String
		Get
			Return Me._AdditionalChargeDesc1
		End Get
		Set
			If (String.Equals(Me._AdditionalChargeDesc1, value) = false) Then
				Me.OnAdditionalChargeDesc1Changing(value)
				Me.SendPropertyChanging
				Me._AdditionalChargeDesc1 = value
				Me.SendPropertyChanged("AdditionalChargeDesc1")
				Me.OnAdditionalChargeDesc1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdditionalChargeDesc2", DbType:="NVarChar(100)")>  _
	Public Property AdditionalChargeDesc2() As String
		Get
			Return Me._AdditionalChargeDesc2
		End Get
		Set
			If (String.Equals(Me._AdditionalChargeDesc2, value) = false) Then
				Me.OnAdditionalChargeDesc2Changing(value)
				Me.SendPropertyChanging
				Me._AdditionalChargeDesc2 = value
				Me.SendPropertyChanged("AdditionalChargeDesc2")
				Me.OnAdditionalChargeDesc2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Comments", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Comments() As String
		Get
			Return Me._Comments
		End Get
		Set
			If (String.Equals(Me._Comments, value) = false) Then
				Me.OnCommentsChanging(value)
				Me.SendPropertyChanging
				Me._Comments = value
				Me.SendPropertyChanged("Comments")
				Me.OnCommentsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CurrentBalance", DbType:="Float")>  _
	Public Property CurrentBalance() As System.Nullable(Of Double)
		Get
			Return Me._CurrentBalance
		End Get
		Set
			If (Me._CurrentBalance.Equals(value) = false) Then
				Me.OnCurrentBalanceChanging(value)
				Me.SendPropertyChanging
				Me._CurrentBalance = value
				Me.SendPropertyChanged("CurrentBalance")
				Me.OnCurrentBalanceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CurrentBalanceDate", DbType:="DateTime")>  _
	Public Property CurrentBalanceDate() As System.Nullable(Of Date)
		Get
			Return Me._CurrentBalanceDate
		End Get
		Set
			If (Me._CurrentBalanceDate.Equals(value) = false) Then
				Me.OnCurrentBalanceDateChanging(value)
				Me.SendPropertyChanging
				Me._CurrentBalanceDate = value
				Me.SendPropertyChanged("CurrentBalanceDate")
				Me.OnCurrentBalanceDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AgingBalanceCurrent", DbType:="Float")>  _
	Public Property AgingBalanceCurrent() As System.Nullable(Of Double)
		Get
			Return Me._AgingBalanceCurrent
		End Get
		Set
			If (Me._AgingBalanceCurrent.Equals(value) = false) Then
				Me.OnAgingBalanceCurrentChanging(value)
				Me.SendPropertyChanging
				Me._AgingBalanceCurrent = value
				Me.SendPropertyChanged("AgingBalanceCurrent")
				Me.OnAgingBalanceCurrentChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AgingBalance3Month", DbType:="Float")>  _
	Public Property AgingBalance3Month() As System.Nullable(Of Double)
		Get
			Return Me._AgingBalance3Month
		End Get
		Set
			If (Me._AgingBalance3Month.Equals(value) = false) Then
				Me.OnAgingBalance3MonthChanging(value)
				Me.SendPropertyChanging
				Me._AgingBalance3Month = value
				Me.SendPropertyChanged("AgingBalance3Month")
				Me.OnAgingBalance3MonthChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AgingBalance4Month", DbType:="Float")>  _
	Public Property AgingBalance4Month() As System.Nullable(Of Double)
		Get
			Return Me._AgingBalance4Month
		End Get
		Set
			If (Me._AgingBalance4Month.Equals(value) = false) Then
				Me.OnAgingBalance4MonthChanging(value)
				Me.SendPropertyChanging
				Me._AgingBalance4Month = value
				Me.SendPropertyChanged("AgingBalance4Month")
				Me.OnAgingBalance4MonthChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AgingBalance5Month", DbType:="Float")>  _
	Public Property AgingBalance5Month() As System.Nullable(Of Double)
		Get
			Return Me._AgingBalance5Month
		End Get
		Set
			If (Me._AgingBalance5Month.Equals(value) = false) Then
				Me.OnAgingBalance5MonthChanging(value)
				Me.SendPropertyChanging
				Me._AgingBalance5Month = value
				Me.SendPropertyChanged("AgingBalance5Month")
				Me.OnAgingBalance5MonthChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PreviousMonthBilled", DbType:="Int")>  _
	Public Property PreviousMonthBilled() As System.Nullable(Of Integer)
		Get
			Return Me._PreviousMonthBilled
		End Get
		Set
			If (Me._PreviousMonthBilled.Equals(value) = false) Then
				Me.OnPreviousMonthBilledChanging(value)
				Me.SendPropertyChanging
				Me._PreviousMonthBilled = value
				Me.SendPropertyChanged("PreviousMonthBilled")
				Me.OnPreviousMonthBilledChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GoInAfter", DbType:="Bit")>  _
	Public Property GoInAfter() As System.Nullable(Of Boolean)
		Get
			Return Me._GoInAfter
		End Get
		Set
			If (Me._GoInAfter.Equals(value) = false) Then
				Me.OnGoInAfterChanging(value)
				Me.SendPropertyChanging
				Me._GoInAfter = value
				Me.SendPropertyChanged("GoInAfter")
				Me.OnGoInAfterChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GoInAfterAmount", DbType:="Float")>  _
	Public Property GoInAfterAmount() As System.Nullable(Of Double)
		Get
			Return Me._GoInAfterAmount
		End Get
		Set
			If (Me._GoInAfterAmount.Equals(value) = false) Then
				Me.OnGoInAfterAmountChanging(value)
				Me.SendPropertyChanging
				Me._GoInAfterAmount = value
				Me.SendPropertyChanged("GoInAfterAmount")
				Me.OnGoInAfterAmountChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SendToCollections", DbType:="Bit")>  _
	Public Property SendToCollections() As System.Nullable(Of Boolean)
		Get
			Return Me._SendToCollections
		End Get
		Set
			If (Me._SendToCollections.Equals(value) = false) Then
				Me.OnSendToCollectionsChanging(value)
				Me.SendPropertyChanging
				Me._SendToCollections = value
				Me.SendPropertyChanged("SendToCollections")
				Me.OnSendToCollectionsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ContinueBilling", DbType:="Bit")>  _
	Public Property ContinueBilling() As System.Nullable(Of Boolean)
		Get
			Return Me._ContinueBilling
		End Get
		Set
			If (Me._ContinueBilling.Equals(value) = false) Then
				Me.OnContinueBillingChanging(value)
				Me.SendPropertyChanging
				Me._ContinueBilling = value
				Me.SendPropertyChanged("ContinueBilling")
				Me.OnContinueBillingChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CollectionNotes", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property CollectionNotes() As String
		Get
			Return Me._CollectionNotes
		End Get
		Set
			If (String.Equals(Me._CollectionNotes, value) = false) Then
				Me.OnCollectionNotesChanging(value)
				Me.SendPropertyChanging
				Me._CollectionNotes = value
				Me.SendPropertyChanged("CollectionNotes")
				Me.OnCollectionNotesChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_YellowTab", DbType:="Bit")>  _
	Public Property YellowTab() As System.Nullable(Of Boolean)
		Get
			Return Me._YellowTab
		End Get
		Set
			If (Me._YellowTab.Equals(value) = false) Then
				Me.OnYellowTabChanging(value)
				Me.SendPropertyChanging
				Me._YellowTab = value
				Me.SendPropertyChanged("YellowTab")
				Me.OnYellowTabChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PreviousSequenceNumber", DbType:="Int")>  _
	Public Property PreviousSequenceNumber() As System.Nullable(Of Integer)
		Get
			Return Me._PreviousSequenceNumber
		End Get
		Set
			If (Me._PreviousSequenceNumber.Equals(value) = false) Then
				Me.OnPreviousSequenceNumberChanging(value)
				Me.SendPropertyChanging
				Me._PreviousSequenceNumber = value
				Me.SendPropertyChanged("PreviousSequenceNumber")
				Me.OnPreviousSequenceNumberChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.RecycleListings")>  _
Partial Public Class RecycleListing
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _DayIndex As Integer
	
	Private _Description As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnDayIndexChanging(value As Integer)
    End Sub
    Partial Private Sub OnDayIndexChanged()
    End Sub
    Partial Private Sub OnDescriptionChanging(value As String)
    End Sub
    Partial Private Sub OnDescriptionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DayIndex", DbType:="Int NOT NULL")>  _
	Public Property DayIndex() As Integer
		Get
			Return Me._DayIndex
		End Get
		Set
			If ((Me._DayIndex = value)  _
						= false) Then
				Me.OnDayIndexChanging(value)
				Me.SendPropertyChanging
				Me._DayIndex = value
				Me.SendPropertyChanged("DayIndex")
				Me.OnDayIndexChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Description() As String
		Get
			Return Me._Description
		End Get
		Set
			If (String.Equals(Me._Description, value) = false) Then
				Me.OnDescriptionChanging(value)
				Me.SendPropertyChanging
				Me._Description = value
				Me.SendPropertyChanged("Description")
				Me.OnDescriptionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.RentalTransactions")>  _
Partial Public Class RentalTransaction
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _CustomerID As Integer
	
	Private _Qty As System.Nullable(Of Integer)
	
	Private _TransDate As Date
	
	Private _Amount As Decimal
	
	Private _Description As String
	
	Private _Reference As String
	
	Private _BillingDate As Date
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnCustomerIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnCustomerIDChanged()
    End Sub
    Partial Private Sub OnQtyChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnQtyChanged()
    End Sub
    Partial Private Sub OnTransDateChanging(value As Date)
    End Sub
    Partial Private Sub OnTransDateChanged()
    End Sub
    Partial Private Sub OnAmountChanging(value As Decimal)
    End Sub
    Partial Private Sub OnAmountChanged()
    End Sub
    Partial Private Sub OnDescriptionChanging(value As String)
    End Sub
    Partial Private Sub OnDescriptionChanged()
    End Sub
    Partial Private Sub OnReferenceChanging(value As String)
    End Sub
    Partial Private Sub OnReferenceChanged()
    End Sub
    Partial Private Sub OnBillingDateChanging(value As Date)
    End Sub
    Partial Private Sub OnBillingDateChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CustomerID", DbType:="Int NOT NULL")>  _
	Public Property CustomerID() As Integer
		Get
			Return Me._CustomerID
		End Get
		Set
			If ((Me._CustomerID = value)  _
						= false) Then
				Me.OnCustomerIDChanging(value)
				Me.SendPropertyChanging
				Me._CustomerID = value
				Me.SendPropertyChanged("CustomerID")
				Me.OnCustomerIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Qty", DbType:="Int")>  _
	Public Property Qty() As System.Nullable(Of Integer)
		Get
			Return Me._Qty
		End Get
		Set
			If (Me._Qty.Equals(value) = false) Then
				Me.OnQtyChanging(value)
				Me.SendPropertyChanging
				Me._Qty = value
				Me.SendPropertyChanged("Qty")
				Me.OnQtyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TransDate", DbType:="DateTime NOT NULL")>  _
	Public Property TransDate() As Date
		Get
			Return Me._TransDate
		End Get
		Set
			If ((Me._TransDate = value)  _
						= false) Then
				Me.OnTransDateChanging(value)
				Me.SendPropertyChanging
				Me._TransDate = value
				Me.SendPropertyChanged("TransDate")
				Me.OnTransDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Amount", DbType:="Money NOT NULL")>  _
	Public Property Amount() As Decimal
		Get
			Return Me._Amount
		End Get
		Set
			If ((Me._Amount = value)  _
						= false) Then
				Me.OnAmountChanging(value)
				Me.SendPropertyChanging
				Me._Amount = value
				Me.SendPropertyChanged("Amount")
				Me.OnAmountChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="NVarChar(100) NOT NULL", CanBeNull:=false)>  _
	Public Property Description() As String
		Get
			Return Me._Description
		End Get
		Set
			If (String.Equals(Me._Description, value) = false) Then
				Me.OnDescriptionChanging(value)
				Me.SendPropertyChanging
				Me._Description = value
				Me.SendPropertyChanged("Description")
				Me.OnDescriptionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Reference", DbType:="NVarChar(20)")>  _
	Public Property Reference() As String
		Get
			Return Me._Reference
		End Get
		Set
			If (String.Equals(Me._Reference, value) = false) Then
				Me.OnReferenceChanging(value)
				Me.SendPropertyChanging
				Me._Reference = value
				Me.SendPropertyChanged("Reference")
				Me.OnReferenceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BillingDate", DbType:="Date NOT NULL")>  _
	Public Property BillingDate() As Date
		Get
			Return Me._BillingDate
		End Get
		Set
			If ((Me._BillingDate = value)  _
						= false) Then
				Me.OnBillingDateChanging(value)
				Me.SendPropertyChanging
				Me._BillingDate = value
				Me.SendPropertyChanged("BillingDate")
				Me.OnBillingDateChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.RentalRouteData")>  _
Partial Public Class RentalRouteData
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _CustomerNumber As Integer
	
	Private _DateOfPickup As Date
	
	Private _Trash As String
	
	Private _Recycle As String
	
	Private _Cardboard As String
	
	Private _Cart As String
	
	Private _Notes As String
	
	Private _MiscCharge As System.Nullable(Of Double)
	
	Private _RollOff As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnCustomerNumberChanging(value As Integer)
    End Sub
    Partial Private Sub OnCustomerNumberChanged()
    End Sub
    Partial Private Sub OnDateOfPickupChanging(value As Date)
    End Sub
    Partial Private Sub OnDateOfPickupChanged()
    End Sub
    Partial Private Sub OnTrashChanging(value As String)
    End Sub
    Partial Private Sub OnTrashChanged()
    End Sub
    Partial Private Sub OnRecycleChanging(value As String)
    End Sub
    Partial Private Sub OnRecycleChanged()
    End Sub
    Partial Private Sub OnCardboardChanging(value As String)
    End Sub
    Partial Private Sub OnCardboardChanged()
    End Sub
    Partial Private Sub OnCartChanging(value As String)
    End Sub
    Partial Private Sub OnCartChanged()
    End Sub
    Partial Private Sub OnNotesChanging(value As String)
    End Sub
    Partial Private Sub OnNotesChanged()
    End Sub
    Partial Private Sub OnMiscChargeChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnMiscChargeChanged()
    End Sub
    Partial Private Sub OnRollOffChanging(value As String)
    End Sub
    Partial Private Sub OnRollOffChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CustomerNumber", DbType:="Int NOT NULL")>  _
	Public Property CustomerNumber() As Integer
		Get
			Return Me._CustomerNumber
		End Get
		Set
			If ((Me._CustomerNumber = value)  _
						= false) Then
				Me.OnCustomerNumberChanging(value)
				Me.SendPropertyChanging
				Me._CustomerNumber = value
				Me.SendPropertyChanged("CustomerNumber")
				Me.OnCustomerNumberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateOfPickup", DbType:="Date NOT NULL")>  _
	Public Property DateOfPickup() As Date
		Get
			Return Me._DateOfPickup
		End Get
		Set
			If ((Me._DateOfPickup = value)  _
						= false) Then
				Me.OnDateOfPickupChanging(value)
				Me.SendPropertyChanging
				Me._DateOfPickup = value
				Me.SendPropertyChanged("DateOfPickup")
				Me.OnDateOfPickupChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Trash", DbType:="NVarChar(50)")>  _
	Public Property Trash() As String
		Get
			Return Me._Trash
		End Get
		Set
			If (String.Equals(Me._Trash, value) = false) Then
				Me.OnTrashChanging(value)
				Me.SendPropertyChanging
				Me._Trash = value
				Me.SendPropertyChanged("Trash")
				Me.OnTrashChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Recycle", DbType:="NVarChar(50)")>  _
	Public Property Recycle() As String
		Get
			Return Me._Recycle
		End Get
		Set
			If (String.Equals(Me._Recycle, value) = false) Then
				Me.OnRecycleChanging(value)
				Me.SendPropertyChanging
				Me._Recycle = value
				Me.SendPropertyChanged("Recycle")
				Me.OnRecycleChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cardboard", DbType:="NVarChar(50)")>  _
	Public Property Cardboard() As String
		Get
			Return Me._Cardboard
		End Get
		Set
			If (String.Equals(Me._Cardboard, value) = false) Then
				Me.OnCardboardChanging(value)
				Me.SendPropertyChanging
				Me._Cardboard = value
				Me.SendPropertyChanged("Cardboard")
				Me.OnCardboardChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cart", DbType:="NVarChar(50)")>  _
	Public Property Cart() As String
		Get
			Return Me._Cart
		End Get
		Set
			If (String.Equals(Me._Cart, value) = false) Then
				Me.OnCartChanging(value)
				Me.SendPropertyChanging
				Me._Cart = value
				Me.SendPropertyChanged("Cart")
				Me.OnCartChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Notes", DbType:="NVarChar(200)")>  _
	Public Property Notes() As String
		Get
			Return Me._Notes
		End Get
		Set
			If (String.Equals(Me._Notes, value) = false) Then
				Me.OnNotesChanging(value)
				Me.SendPropertyChanging
				Me._Notes = value
				Me.SendPropertyChanged("Notes")
				Me.OnNotesChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MiscCharge", DbType:="Float")>  _
	Public Property MiscCharge() As System.Nullable(Of Double)
		Get
			Return Me._MiscCharge
		End Get
		Set
			If (Me._MiscCharge.Equals(value) = false) Then
				Me.OnMiscChargeChanging(value)
				Me.SendPropertyChanging
				Me._MiscCharge = value
				Me.SendPropertyChanged("MiscCharge")
				Me.OnMiscChargeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RollOff", DbType:="NVarChar(50)")>  _
	Public Property RollOff() As String
		Get
			Return Me._RollOff
		End Get
		Set
			If (String.Equals(Me._RollOff, value) = false) Then
				Me.OnRollOffChanging(value)
				Me.SendPropertyChanging
				Me._RollOff = value
				Me.SendPropertyChanged("RollOff")
				Me.OnRollOffChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.RentalPickupInformation")>  _
Partial Public Class RentalPickupInformation
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _CustomerNumber As Integer
	
	Private _DumpsterIndex As String
	
	Private _DaysIndex As String
	
	Private _LoadIndex As String
	
	Private _SizeIndex As String
	
	Private _MiscText As String
	
	Private _TruckNotes As String
	
	Private _Route As Integer
	
	Private _SequenceNumber As Integer
	
	Private _RecycleRoute As Integer
	
	Private _RecycleSequenceNumber As Integer
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnCustomerNumberChanging(value As Integer)
    End Sub
    Partial Private Sub OnCustomerNumberChanged()
    End Sub
    Partial Private Sub OnDumpsterIndexChanging(value As String)
    End Sub
    Partial Private Sub OnDumpsterIndexChanged()
    End Sub
    Partial Private Sub OnDaysIndexChanging(value As String)
    End Sub
    Partial Private Sub OnDaysIndexChanged()
    End Sub
    Partial Private Sub OnLoadIndexChanging(value As String)
    End Sub
    Partial Private Sub OnLoadIndexChanged()
    End Sub
    Partial Private Sub OnSizeIndexChanging(value As String)
    End Sub
    Partial Private Sub OnSizeIndexChanged()
    End Sub
    Partial Private Sub OnMiscTextChanging(value As String)
    End Sub
    Partial Private Sub OnMiscTextChanged()
    End Sub
    Partial Private Sub OnTruckNotesChanging(value As String)
    End Sub
    Partial Private Sub OnTruckNotesChanged()
    End Sub
    Partial Private Sub OnRouteChanging(value As Integer)
    End Sub
    Partial Private Sub OnRouteChanged()
    End Sub
    Partial Private Sub OnSequenceNumberChanging(value As Integer)
    End Sub
    Partial Private Sub OnSequenceNumberChanged()
    End Sub
    Partial Private Sub OnRecycleRouteChanging(value As Integer)
    End Sub
    Partial Private Sub OnRecycleRouteChanged()
    End Sub
    Partial Private Sub OnRecycleSequenceNumberChanging(value As Integer)
    End Sub
    Partial Private Sub OnRecycleSequenceNumberChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CustomerNumber", DbType:="Int NOT NULL")>  _
	Public Property CustomerNumber() As Integer
		Get
			Return Me._CustomerNumber
		End Get
		Set
			If ((Me._CustomerNumber = value)  _
						= false) Then
				Me.OnCustomerNumberChanging(value)
				Me.SendPropertyChanging
				Me._CustomerNumber = value
				Me.SendPropertyChanged("CustomerNumber")
				Me.OnCustomerNumberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DumpsterIndex", DbType:="NVarChar(20)")>  _
	Public Property DumpsterIndex() As String
		Get
			Return Me._DumpsterIndex
		End Get
		Set
			If (String.Equals(Me._DumpsterIndex, value) = false) Then
				Me.OnDumpsterIndexChanging(value)
				Me.SendPropertyChanging
				Me._DumpsterIndex = value
				Me.SendPropertyChanged("DumpsterIndex")
				Me.OnDumpsterIndexChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DaysIndex", DbType:="NVarChar(20)")>  _
	Public Property DaysIndex() As String
		Get
			Return Me._DaysIndex
		End Get
		Set
			If (String.Equals(Me._DaysIndex, value) = false) Then
				Me.OnDaysIndexChanging(value)
				Me.SendPropertyChanging
				Me._DaysIndex = value
				Me.SendPropertyChanged("DaysIndex")
				Me.OnDaysIndexChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LoadIndex", DbType:="NVarChar(20)")>  _
	Public Property LoadIndex() As String
		Get
			Return Me._LoadIndex
		End Get
		Set
			If (String.Equals(Me._LoadIndex, value) = false) Then
				Me.OnLoadIndexChanging(value)
				Me.SendPropertyChanging
				Me._LoadIndex = value
				Me.SendPropertyChanged("LoadIndex")
				Me.OnLoadIndexChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SizeIndex", DbType:="NVarChar(20)")>  _
	Public Property SizeIndex() As String
		Get
			Return Me._SizeIndex
		End Get
		Set
			If (String.Equals(Me._SizeIndex, value) = false) Then
				Me.OnSizeIndexChanging(value)
				Me.SendPropertyChanging
				Me._SizeIndex = value
				Me.SendPropertyChanged("SizeIndex")
				Me.OnSizeIndexChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MiscText", DbType:="NVarChar(255)")>  _
	Public Property MiscText() As String
		Get
			Return Me._MiscText
		End Get
		Set
			If (String.Equals(Me._MiscText, value) = false) Then
				Me.OnMiscTextChanging(value)
				Me.SendPropertyChanging
				Me._MiscText = value
				Me.SendPropertyChanged("MiscText")
				Me.OnMiscTextChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TruckNotes", DbType:="NVarChar(255)")>  _
	Public Property TruckNotes() As String
		Get
			Return Me._TruckNotes
		End Get
		Set
			If (String.Equals(Me._TruckNotes, value) = false) Then
				Me.OnTruckNotesChanging(value)
				Me.SendPropertyChanging
				Me._TruckNotes = value
				Me.SendPropertyChanged("TruckNotes")
				Me.OnTruckNotesChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Route", DbType:="Int NOT NULL")>  _
	Public Property Route() As Integer
		Get
			Return Me._Route
		End Get
		Set
			If ((Me._Route = value)  _
						= false) Then
				Me.OnRouteChanging(value)
				Me.SendPropertyChanging
				Me._Route = value
				Me.SendPropertyChanged("Route")
				Me.OnRouteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SequenceNumber", DbType:="Int NOT NULL")>  _
	Public Property SequenceNumber() As Integer
		Get
			Return Me._SequenceNumber
		End Get
		Set
			If ((Me._SequenceNumber = value)  _
						= false) Then
				Me.OnSequenceNumberChanging(value)
				Me.SendPropertyChanging
				Me._SequenceNumber = value
				Me.SendPropertyChanged("SequenceNumber")
				Me.OnSequenceNumberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RecycleRoute", DbType:="Int NOT NULL")>  _
	Public Property RecycleRoute() As Integer
		Get
			Return Me._RecycleRoute
		End Get
		Set
			If ((Me._RecycleRoute = value)  _
						= false) Then
				Me.OnRecycleRouteChanging(value)
				Me.SendPropertyChanging
				Me._RecycleRoute = value
				Me.SendPropertyChanged("RecycleRoute")
				Me.OnRecycleRouteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RecycleSequenceNumber", DbType:="Int NOT NULL")>  _
	Public Property RecycleSequenceNumber() As Integer
		Get
			Return Me._RecycleSequenceNumber
		End Get
		Set
			If ((Me._RecycleSequenceNumber = value)  _
						= false) Then
				Me.OnRecycleSequenceNumberChanging(value)
				Me.SendPropertyChanging
				Me._RecycleSequenceNumber = value
				Me.SendPropertyChanged("RecycleSequenceNumber")
				Me.OnRecycleSequenceNumberChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.RentalCustomers")>  _
Partial Public Class RentalCustomer
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _CustomerNumber As Integer
	
	Private _SequenceNumber As System.Nullable(Of Integer)
	
	Private _Owner As String
	
	Private _Contact As String
	
	Private _RouteLocation_FirstName As String
	
	Private _RouteLocation_LastName As String
	
	Private _RouteLocation_Address As String
	
	Private _RouteLocation_City As String
	
	Private _RouteLocation_State As String
	
	Private _RouteLocation_ZipCode As String
	
	Private _Billing_FirstName As String
	
	Private _Billing_LastName As String
	
	Private _Billing_Address As String
	
	Private _Billing_City As String
	
	Private _Billing_State As String
	
	Private _Billing_ZipCode As String
	
	Private _BusinessPhone As String
	
	Private _HomePhone As String
	
	Private _Fax As String
	
	Private _EMailAddress As String
	
	Private _SendBillViaEmail As System.Nullable(Of Boolean)
	
	Private _PickupDay As System.Nullable(Of Integer)
	
	Private _BillingSameAsRoute As System.Nullable(Of Boolean)
	
	Private _TaxRate As System.Nullable(Of Double)
	
	Private _BillingType As System.Nullable(Of Integer)
	
	Private _Route As System.Nullable(Of Integer)
	
	Private _LastMonthBilled As Integer
	
	Private _MonthsToBill As Integer
	
	Private _LastPaymentAmount As System.Nullable(Of Double)
	
	Private _LastPaymentDate As System.Nullable(Of Date)
	
	Private _Balance As System.Nullable(Of Double)
	
	Private _AdditionalChargeDesc1 As String
	
	Private _Comments As String
	
	Private _CurrentBalance As System.Nullable(Of Double)
	
	Private _CurrentBalanceDate As System.Nullable(Of Date)
	
	Private _AgingBalanceCurrent As System.Nullable(Of Double)
	
	Private _AgingBalance3Month As System.Nullable(Of Double)
	
	Private _AgingBalance4Month As System.Nullable(Of Double)
	
	Private _AgingBalance5Month As System.Nullable(Of Double)
	
	Private _DumpsterCharge As System.Nullable(Of Double)
	
	Private _DumpsterPUType As System.Nullable(Of Integer)
	
	Private _DumpsterRental As System.Nullable(Of Double)
	
	Private _RollOffCharge As System.Nullable(Of Double)
	
	Private _RollOffRental As System.Nullable(Of Double)
	
	Private _Cart90GallonCharge As System.Nullable(Of Double)
	
	Private _Cart90GallonPUType As System.Nullable(Of Integer)
	
	Private _Cart90GallonRental As System.Nullable(Of Double)
	
	Private _CardboardCharge As System.Nullable(Of Double)
	
	Private _CardboardPUType As System.Nullable(Of Integer)
	
	Private _CardboardRental As System.Nullable(Of Double)
	
	Private _RecycleCharge As System.Nullable(Of Double)
	
	Private _RecyclePUType As System.Nullable(Of Integer)
	
	Private _RecycleRental As System.Nullable(Of Double)
	
	Private _PreviousMonthBilled As System.Nullable(Of Integer)
	
	Private _PONumber As String
	
	Private _UsePONumberForAll As System.Nullable(Of Boolean)
	
	Private _PrintBill As Boolean
	
	Private _Inactive As Boolean
	
	Private _SendToCollections As Boolean
	
	Private _CollectionNotes As String
	
	Private _SpecialRoute As Boolean
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCustomerNumberChanging(value As Integer)
    End Sub
    Partial Private Sub OnCustomerNumberChanged()
    End Sub
    Partial Private Sub OnSequenceNumberChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSequenceNumberChanged()
    End Sub
    Partial Private Sub OnOwnerChanging(value As String)
    End Sub
    Partial Private Sub OnOwnerChanged()
    End Sub
    Partial Private Sub OnContactChanging(value As String)
    End Sub
    Partial Private Sub OnContactChanged()
    End Sub
    Partial Private Sub OnRouteLocation_FirstNameChanging(value As String)
    End Sub
    Partial Private Sub OnRouteLocation_FirstNameChanged()
    End Sub
    Partial Private Sub OnRouteLocation_LastNameChanging(value As String)
    End Sub
    Partial Private Sub OnRouteLocation_LastNameChanged()
    End Sub
    Partial Private Sub OnRouteLocation_AddressChanging(value As String)
    End Sub
    Partial Private Sub OnRouteLocation_AddressChanged()
    End Sub
    Partial Private Sub OnRouteLocation_CityChanging(value As String)
    End Sub
    Partial Private Sub OnRouteLocation_CityChanged()
    End Sub
    Partial Private Sub OnRouteLocation_StateChanging(value As String)
    End Sub
    Partial Private Sub OnRouteLocation_StateChanged()
    End Sub
    Partial Private Sub OnRouteLocation_ZipCodeChanging(value As String)
    End Sub
    Partial Private Sub OnRouteLocation_ZipCodeChanged()
    End Sub
    Partial Private Sub OnBilling_FirstNameChanging(value As String)
    End Sub
    Partial Private Sub OnBilling_FirstNameChanged()
    End Sub
    Partial Private Sub OnBilling_LastNameChanging(value As String)
    End Sub
    Partial Private Sub OnBilling_LastNameChanged()
    End Sub
    Partial Private Sub OnBilling_AddressChanging(value As String)
    End Sub
    Partial Private Sub OnBilling_AddressChanged()
    End Sub
    Partial Private Sub OnBilling_CityChanging(value As String)
    End Sub
    Partial Private Sub OnBilling_CityChanged()
    End Sub
    Partial Private Sub OnBilling_StateChanging(value As String)
    End Sub
    Partial Private Sub OnBilling_StateChanged()
    End Sub
    Partial Private Sub OnBilling_ZipCodeChanging(value As String)
    End Sub
    Partial Private Sub OnBilling_ZipCodeChanged()
    End Sub
    Partial Private Sub OnBusinessPhoneChanging(value As String)
    End Sub
    Partial Private Sub OnBusinessPhoneChanged()
    End Sub
    Partial Private Sub OnHomePhoneChanging(value As String)
    End Sub
    Partial Private Sub OnHomePhoneChanged()
    End Sub
    Partial Private Sub OnFaxChanging(value As String)
    End Sub
    Partial Private Sub OnFaxChanged()
    End Sub
    Partial Private Sub OnEMailAddressChanging(value As String)
    End Sub
    Partial Private Sub OnEMailAddressChanged()
    End Sub
    Partial Private Sub OnSendBillViaEmailChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnSendBillViaEmailChanged()
    End Sub
    Partial Private Sub OnPickupDayChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPickupDayChanged()
    End Sub
    Partial Private Sub OnBillingSameAsRouteChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnBillingSameAsRouteChanged()
    End Sub
    Partial Private Sub OnTaxRateChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnTaxRateChanged()
    End Sub
    Partial Private Sub OnBillingTypeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBillingTypeChanged()
    End Sub
    Partial Private Sub OnRouteChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnRouteChanged()
    End Sub
    Partial Private Sub OnLastMonthBilledChanging(value As Integer)
    End Sub
    Partial Private Sub OnLastMonthBilledChanged()
    End Sub
    Partial Private Sub OnMonthsToBillChanging(value As Integer)
    End Sub
    Partial Private Sub OnMonthsToBillChanged()
    End Sub
    Partial Private Sub OnLastPaymentAmountChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnLastPaymentAmountChanged()
    End Sub
    Partial Private Sub OnLastPaymentDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnLastPaymentDateChanged()
    End Sub
    Partial Private Sub OnBalanceChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnBalanceChanged()
    End Sub
    Partial Private Sub OnAdditionalChargeDesc1Changing(value As String)
    End Sub
    Partial Private Sub OnAdditionalChargeDesc1Changed()
    End Sub
    Partial Private Sub OnCommentsChanging(value As String)
    End Sub
    Partial Private Sub OnCommentsChanged()
    End Sub
    Partial Private Sub OnCurrentBalanceChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCurrentBalanceChanged()
    End Sub
    Partial Private Sub OnCurrentBalanceDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCurrentBalanceDateChanged()
    End Sub
    Partial Private Sub OnAgingBalanceCurrentChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnAgingBalanceCurrentChanged()
    End Sub
    Partial Private Sub OnAgingBalance3MonthChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnAgingBalance3MonthChanged()
    End Sub
    Partial Private Sub OnAgingBalance4MonthChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnAgingBalance4MonthChanged()
    End Sub
    Partial Private Sub OnAgingBalance5MonthChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnAgingBalance5MonthChanged()
    End Sub
    Partial Private Sub OnDumpsterChargeChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnDumpsterChargeChanged()
    End Sub
    Partial Private Sub OnDumpsterPUTypeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDumpsterPUTypeChanged()
    End Sub
    Partial Private Sub OnDumpsterRentalChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnDumpsterRentalChanged()
    End Sub
    Partial Private Sub OnRollOffChargeChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnRollOffChargeChanged()
    End Sub
    Partial Private Sub OnRollOffRentalChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnRollOffRentalChanged()
    End Sub
    Partial Private Sub OnCart90GallonChargeChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCart90GallonChargeChanged()
    End Sub
    Partial Private Sub OnCart90GallonPUTypeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCart90GallonPUTypeChanged()
    End Sub
    Partial Private Sub OnCart90GallonRentalChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCart90GallonRentalChanged()
    End Sub
    Partial Private Sub OnCardboardChargeChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCardboardChargeChanged()
    End Sub
    Partial Private Sub OnCardboardPUTypeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCardboardPUTypeChanged()
    End Sub
    Partial Private Sub OnCardboardRentalChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCardboardRentalChanged()
    End Sub
    Partial Private Sub OnRecycleChargeChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnRecycleChargeChanged()
    End Sub
    Partial Private Sub OnRecyclePUTypeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnRecyclePUTypeChanged()
    End Sub
    Partial Private Sub OnRecycleRentalChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnRecycleRentalChanged()
    End Sub
    Partial Private Sub OnPreviousMonthBilledChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPreviousMonthBilledChanged()
    End Sub
    Partial Private Sub OnPONumberChanging(value As String)
    End Sub
    Partial Private Sub OnPONumberChanged()
    End Sub
    Partial Private Sub OnUsePONumberForAllChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnUsePONumberForAllChanged()
    End Sub
    Partial Private Sub OnPrintBillChanging(value As Boolean)
    End Sub
    Partial Private Sub OnPrintBillChanged()
    End Sub
    Partial Private Sub OnInactiveChanging(value As Boolean)
    End Sub
    Partial Private Sub OnInactiveChanged()
    End Sub
    Partial Private Sub OnSendToCollectionsChanging(value As Boolean)
    End Sub
    Partial Private Sub OnSendToCollectionsChanged()
    End Sub
    Partial Private Sub OnCollectionNotesChanging(value As String)
    End Sub
    Partial Private Sub OnCollectionNotesChanged()
    End Sub
    Partial Private Sub OnSpecialRouteChanging(value As Boolean)
    End Sub
    Partial Private Sub OnSpecialRouteChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CustomerNumber", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property CustomerNumber() As Integer
		Get
			Return Me._CustomerNumber
		End Get
		Set
			If ((Me._CustomerNumber = value)  _
						= false) Then
				Me.OnCustomerNumberChanging(value)
				Me.SendPropertyChanging
				Me._CustomerNumber = value
				Me.SendPropertyChanged("CustomerNumber")
				Me.OnCustomerNumberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SequenceNumber", DbType:="Int")>  _
	Public Property SequenceNumber() As System.Nullable(Of Integer)
		Get
			Return Me._SequenceNumber
		End Get
		Set
			If (Me._SequenceNumber.Equals(value) = false) Then
				Me.OnSequenceNumberChanging(value)
				Me.SendPropertyChanging
				Me._SequenceNumber = value
				Me.SendPropertyChanged("SequenceNumber")
				Me.OnSequenceNumberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Owner", DbType:="NVarChar(50)")>  _
	Public Property Owner() As String
		Get
			Return Me._Owner
		End Get
		Set
			If (String.Equals(Me._Owner, value) = false) Then
				Me.OnOwnerChanging(value)
				Me.SendPropertyChanging
				Me._Owner = value
				Me.SendPropertyChanged("Owner")
				Me.OnOwnerChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Contact", DbType:="NVarChar(50)")>  _
	Public Property Contact() As String
		Get
			Return Me._Contact
		End Get
		Set
			If (String.Equals(Me._Contact, value) = false) Then
				Me.OnContactChanging(value)
				Me.SendPropertyChanging
				Me._Contact = value
				Me.SendPropertyChanged("Contact")
				Me.OnContactChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RouteLocation_FirstName", DbType:="NVarChar(30)")>  _
	Public Property RouteLocation_FirstName() As String
		Get
			Return Me._RouteLocation_FirstName
		End Get
		Set
			If (String.Equals(Me._RouteLocation_FirstName, value) = false) Then
				Me.OnRouteLocation_FirstNameChanging(value)
				Me.SendPropertyChanging
				Me._RouteLocation_FirstName = value
				Me.SendPropertyChanged("RouteLocation_FirstName")
				Me.OnRouteLocation_FirstNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RouteLocation_LastName", DbType:="NVarChar(50)")>  _
	Public Property RouteLocation_LastName() As String
		Get
			Return Me._RouteLocation_LastName
		End Get
		Set
			If (String.Equals(Me._RouteLocation_LastName, value) = false) Then
				Me.OnRouteLocation_LastNameChanging(value)
				Me.SendPropertyChanging
				Me._RouteLocation_LastName = value
				Me.SendPropertyChanged("RouteLocation_LastName")
				Me.OnRouteLocation_LastNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RouteLocation_Address", DbType:="NVarChar(100)")>  _
	Public Property RouteLocation_Address() As String
		Get
			Return Me._RouteLocation_Address
		End Get
		Set
			If (String.Equals(Me._RouteLocation_Address, value) = false) Then
				Me.OnRouteLocation_AddressChanging(value)
				Me.SendPropertyChanging
				Me._RouteLocation_Address = value
				Me.SendPropertyChanged("RouteLocation_Address")
				Me.OnRouteLocation_AddressChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RouteLocation_City", DbType:="NVarChar(30)")>  _
	Public Property RouteLocation_City() As String
		Get
			Return Me._RouteLocation_City
		End Get
		Set
			If (String.Equals(Me._RouteLocation_City, value) = false) Then
				Me.OnRouteLocation_CityChanging(value)
				Me.SendPropertyChanging
				Me._RouteLocation_City = value
				Me.SendPropertyChanged("RouteLocation_City")
				Me.OnRouteLocation_CityChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RouteLocation_State", DbType:="NVarChar(15)")>  _
	Public Property RouteLocation_State() As String
		Get
			Return Me._RouteLocation_State
		End Get
		Set
			If (String.Equals(Me._RouteLocation_State, value) = false) Then
				Me.OnRouteLocation_StateChanging(value)
				Me.SendPropertyChanging
				Me._RouteLocation_State = value
				Me.SendPropertyChanged("RouteLocation_State")
				Me.OnRouteLocation_StateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RouteLocation_ZipCode", DbType:="NVarChar(15)")>  _
	Public Property RouteLocation_ZipCode() As String
		Get
			Return Me._RouteLocation_ZipCode
		End Get
		Set
			If (String.Equals(Me._RouteLocation_ZipCode, value) = false) Then
				Me.OnRouteLocation_ZipCodeChanging(value)
				Me.SendPropertyChanging
				Me._RouteLocation_ZipCode = value
				Me.SendPropertyChanged("RouteLocation_ZipCode")
				Me.OnRouteLocation_ZipCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Billing_FirstName", DbType:="NVarChar(30)")>  _
	Public Property Billing_FirstName() As String
		Get
			Return Me._Billing_FirstName
		End Get
		Set
			If (String.Equals(Me._Billing_FirstName, value) = false) Then
				Me.OnBilling_FirstNameChanging(value)
				Me.SendPropertyChanging
				Me._Billing_FirstName = value
				Me.SendPropertyChanged("Billing_FirstName")
				Me.OnBilling_FirstNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Billing_LastName", DbType:="NVarChar(30)")>  _
	Public Property Billing_LastName() As String
		Get
			Return Me._Billing_LastName
		End Get
		Set
			If (String.Equals(Me._Billing_LastName, value) = false) Then
				Me.OnBilling_LastNameChanging(value)
				Me.SendPropertyChanging
				Me._Billing_LastName = value
				Me.SendPropertyChanged("Billing_LastName")
				Me.OnBilling_LastNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Billing_Address", DbType:="NVarChar(100)")>  _
	Public Property Billing_Address() As String
		Get
			Return Me._Billing_Address
		End Get
		Set
			If (String.Equals(Me._Billing_Address, value) = false) Then
				Me.OnBilling_AddressChanging(value)
				Me.SendPropertyChanging
				Me._Billing_Address = value
				Me.SendPropertyChanged("Billing_Address")
				Me.OnBilling_AddressChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Billing_City", DbType:="NVarChar(30)")>  _
	Public Property Billing_City() As String
		Get
			Return Me._Billing_City
		End Get
		Set
			If (String.Equals(Me._Billing_City, value) = false) Then
				Me.OnBilling_CityChanging(value)
				Me.SendPropertyChanging
				Me._Billing_City = value
				Me.SendPropertyChanged("Billing_City")
				Me.OnBilling_CityChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Billing_State", DbType:="NVarChar(15)")>  _
	Public Property Billing_State() As String
		Get
			Return Me._Billing_State
		End Get
		Set
			If (String.Equals(Me._Billing_State, value) = false) Then
				Me.OnBilling_StateChanging(value)
				Me.SendPropertyChanging
				Me._Billing_State = value
				Me.SendPropertyChanged("Billing_State")
				Me.OnBilling_StateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Billing_ZipCode", DbType:="NVarChar(15)")>  _
	Public Property Billing_ZipCode() As String
		Get
			Return Me._Billing_ZipCode
		End Get
		Set
			If (String.Equals(Me._Billing_ZipCode, value) = false) Then
				Me.OnBilling_ZipCodeChanging(value)
				Me.SendPropertyChanging
				Me._Billing_ZipCode = value
				Me.SendPropertyChanged("Billing_ZipCode")
				Me.OnBilling_ZipCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BusinessPhone", DbType:="NVarChar(20)")>  _
	Public Property BusinessPhone() As String
		Get
			Return Me._BusinessPhone
		End Get
		Set
			If (String.Equals(Me._BusinessPhone, value) = false) Then
				Me.OnBusinessPhoneChanging(value)
				Me.SendPropertyChanging
				Me._BusinessPhone = value
				Me.SendPropertyChanged("BusinessPhone")
				Me.OnBusinessPhoneChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HomePhone", DbType:="NVarChar(20)")>  _
	Public Property HomePhone() As String
		Get
			Return Me._HomePhone
		End Get
		Set
			If (String.Equals(Me._HomePhone, value) = false) Then
				Me.OnHomePhoneChanging(value)
				Me.SendPropertyChanging
				Me._HomePhone = value
				Me.SendPropertyChanged("HomePhone")
				Me.OnHomePhoneChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Fax", DbType:="NVarChar(20)")>  _
	Public Property Fax() As String
		Get
			Return Me._Fax
		End Get
		Set
			If (String.Equals(Me._Fax, value) = false) Then
				Me.OnFaxChanging(value)
				Me.SendPropertyChanging
				Me._Fax = value
				Me.SendPropertyChanged("Fax")
				Me.OnFaxChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EMailAddress", DbType:="NVarChar(255)")>  _
	Public Property EMailAddress() As String
		Get
			Return Me._EMailAddress
		End Get
		Set
			If (String.Equals(Me._EMailAddress, value) = false) Then
				Me.OnEMailAddressChanging(value)
				Me.SendPropertyChanging
				Me._EMailAddress = value
				Me.SendPropertyChanged("EMailAddress")
				Me.OnEMailAddressChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SendBillViaEmail", DbType:="Bit")>  _
	Public Property SendBillViaEmail() As System.Nullable(Of Boolean)
		Get
			Return Me._SendBillViaEmail
		End Get
		Set
			If (Me._SendBillViaEmail.Equals(value) = false) Then
				Me.OnSendBillViaEmailChanging(value)
				Me.SendPropertyChanging
				Me._SendBillViaEmail = value
				Me.SendPropertyChanged("SendBillViaEmail")
				Me.OnSendBillViaEmailChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PickupDay", DbType:="Int")>  _
	Public Property PickupDay() As System.Nullable(Of Integer)
		Get
			Return Me._PickupDay
		End Get
		Set
			If (Me._PickupDay.Equals(value) = false) Then
				Me.OnPickupDayChanging(value)
				Me.SendPropertyChanging
				Me._PickupDay = value
				Me.SendPropertyChanged("PickupDay")
				Me.OnPickupDayChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BillingSameAsRoute", DbType:="Bit")>  _
	Public Property BillingSameAsRoute() As System.Nullable(Of Boolean)
		Get
			Return Me._BillingSameAsRoute
		End Get
		Set
			If (Me._BillingSameAsRoute.Equals(value) = false) Then
				Me.OnBillingSameAsRouteChanging(value)
				Me.SendPropertyChanging
				Me._BillingSameAsRoute = value
				Me.SendPropertyChanged("BillingSameAsRoute")
				Me.OnBillingSameAsRouteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TaxRate", DbType:="Float")>  _
	Public Property TaxRate() As System.Nullable(Of Double)
		Get
			Return Me._TaxRate
		End Get
		Set
			If (Me._TaxRate.Equals(value) = false) Then
				Me.OnTaxRateChanging(value)
				Me.SendPropertyChanging
				Me._TaxRate = value
				Me.SendPropertyChanged("TaxRate")
				Me.OnTaxRateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BillingType", DbType:="Int")>  _
	Public Property BillingType() As System.Nullable(Of Integer)
		Get
			Return Me._BillingType
		End Get
		Set
			If (Me._BillingType.Equals(value) = false) Then
				Me.OnBillingTypeChanging(value)
				Me.SendPropertyChanging
				Me._BillingType = value
				Me.SendPropertyChanged("BillingType")
				Me.OnBillingTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Route", DbType:="Int")>  _
	Public Property Route() As System.Nullable(Of Integer)
		Get
			Return Me._Route
		End Get
		Set
			If (Me._Route.Equals(value) = false) Then
				Me.OnRouteChanging(value)
				Me.SendPropertyChanging
				Me._Route = value
				Me.SendPropertyChanged("Route")
				Me.OnRouteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LastMonthBilled", DbType:="Int NOT NULL")>  _
	Public Property LastMonthBilled() As Integer
		Get
			Return Me._LastMonthBilled
		End Get
		Set
			If ((Me._LastMonthBilled = value)  _
						= false) Then
				Me.OnLastMonthBilledChanging(value)
				Me.SendPropertyChanging
				Me._LastMonthBilled = value
				Me.SendPropertyChanged("LastMonthBilled")
				Me.OnLastMonthBilledChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MonthsToBill", DbType:="Int NOT NULL")>  _
	Public Property MonthsToBill() As Integer
		Get
			Return Me._MonthsToBill
		End Get
		Set
			If ((Me._MonthsToBill = value)  _
						= false) Then
				Me.OnMonthsToBillChanging(value)
				Me.SendPropertyChanging
				Me._MonthsToBill = value
				Me.SendPropertyChanged("MonthsToBill")
				Me.OnMonthsToBillChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LastPaymentAmount", DbType:="Float")>  _
	Public Property LastPaymentAmount() As System.Nullable(Of Double)
		Get
			Return Me._LastPaymentAmount
		End Get
		Set
			If (Me._LastPaymentAmount.Equals(value) = false) Then
				Me.OnLastPaymentAmountChanging(value)
				Me.SendPropertyChanging
				Me._LastPaymentAmount = value
				Me.SendPropertyChanged("LastPaymentAmount")
				Me.OnLastPaymentAmountChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LastPaymentDate", DbType:="DateTime")>  _
	Public Property LastPaymentDate() As System.Nullable(Of Date)
		Get
			Return Me._LastPaymentDate
		End Get
		Set
			If (Me._LastPaymentDate.Equals(value) = false) Then
				Me.OnLastPaymentDateChanging(value)
				Me.SendPropertyChanging
				Me._LastPaymentDate = value
				Me.SendPropertyChanged("LastPaymentDate")
				Me.OnLastPaymentDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Balance", DbType:="Float")>  _
	Public Property Balance() As System.Nullable(Of Double)
		Get
			Return Me._Balance
		End Get
		Set
			If (Me._Balance.Equals(value) = false) Then
				Me.OnBalanceChanging(value)
				Me.SendPropertyChanging
				Me._Balance = value
				Me.SendPropertyChanged("Balance")
				Me.OnBalanceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdditionalChargeDesc1", DbType:="NVarChar(100)")>  _
	Public Property AdditionalChargeDesc1() As String
		Get
			Return Me._AdditionalChargeDesc1
		End Get
		Set
			If (String.Equals(Me._AdditionalChargeDesc1, value) = false) Then
				Me.OnAdditionalChargeDesc1Changing(value)
				Me.SendPropertyChanging
				Me._AdditionalChargeDesc1 = value
				Me.SendPropertyChanged("AdditionalChargeDesc1")
				Me.OnAdditionalChargeDesc1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Comments", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Comments() As String
		Get
			Return Me._Comments
		End Get
		Set
			If (String.Equals(Me._Comments, value) = false) Then
				Me.OnCommentsChanging(value)
				Me.SendPropertyChanging
				Me._Comments = value
				Me.SendPropertyChanged("Comments")
				Me.OnCommentsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CurrentBalance", DbType:="Float")>  _
	Public Property CurrentBalance() As System.Nullable(Of Double)
		Get
			Return Me._CurrentBalance
		End Get
		Set
			If (Me._CurrentBalance.Equals(value) = false) Then
				Me.OnCurrentBalanceChanging(value)
				Me.SendPropertyChanging
				Me._CurrentBalance = value
				Me.SendPropertyChanged("CurrentBalance")
				Me.OnCurrentBalanceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CurrentBalanceDate", DbType:="DateTime")>  _
	Public Property CurrentBalanceDate() As System.Nullable(Of Date)
		Get
			Return Me._CurrentBalanceDate
		End Get
		Set
			If (Me._CurrentBalanceDate.Equals(value) = false) Then
				Me.OnCurrentBalanceDateChanging(value)
				Me.SendPropertyChanging
				Me._CurrentBalanceDate = value
				Me.SendPropertyChanged("CurrentBalanceDate")
				Me.OnCurrentBalanceDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AgingBalanceCurrent", DbType:="Float")>  _
	Public Property AgingBalanceCurrent() As System.Nullable(Of Double)
		Get
			Return Me._AgingBalanceCurrent
		End Get
		Set
			If (Me._AgingBalanceCurrent.Equals(value) = false) Then
				Me.OnAgingBalanceCurrentChanging(value)
				Me.SendPropertyChanging
				Me._AgingBalanceCurrent = value
				Me.SendPropertyChanged("AgingBalanceCurrent")
				Me.OnAgingBalanceCurrentChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AgingBalance3Month", DbType:="Float")>  _
	Public Property AgingBalance3Month() As System.Nullable(Of Double)
		Get
			Return Me._AgingBalance3Month
		End Get
		Set
			If (Me._AgingBalance3Month.Equals(value) = false) Then
				Me.OnAgingBalance3MonthChanging(value)
				Me.SendPropertyChanging
				Me._AgingBalance3Month = value
				Me.SendPropertyChanged("AgingBalance3Month")
				Me.OnAgingBalance3MonthChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AgingBalance4Month", DbType:="Float")>  _
	Public Property AgingBalance4Month() As System.Nullable(Of Double)
		Get
			Return Me._AgingBalance4Month
		End Get
		Set
			If (Me._AgingBalance4Month.Equals(value) = false) Then
				Me.OnAgingBalance4MonthChanging(value)
				Me.SendPropertyChanging
				Me._AgingBalance4Month = value
				Me.SendPropertyChanged("AgingBalance4Month")
				Me.OnAgingBalance4MonthChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AgingBalance5Month", DbType:="Float")>  _
	Public Property AgingBalance5Month() As System.Nullable(Of Double)
		Get
			Return Me._AgingBalance5Month
		End Get
		Set
			If (Me._AgingBalance5Month.Equals(value) = false) Then
				Me.OnAgingBalance5MonthChanging(value)
				Me.SendPropertyChanging
				Me._AgingBalance5Month = value
				Me.SendPropertyChanged("AgingBalance5Month")
				Me.OnAgingBalance5MonthChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DumpsterCharge", DbType:="Float")>  _
	Public Property DumpsterCharge() As System.Nullable(Of Double)
		Get
			Return Me._DumpsterCharge
		End Get
		Set
			If (Me._DumpsterCharge.Equals(value) = false) Then
				Me.OnDumpsterChargeChanging(value)
				Me.SendPropertyChanging
				Me._DumpsterCharge = value
				Me.SendPropertyChanged("DumpsterCharge")
				Me.OnDumpsterChargeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DumpsterPUType", DbType:="Int")>  _
	Public Property DumpsterPUType() As System.Nullable(Of Integer)
		Get
			Return Me._DumpsterPUType
		End Get
		Set
			If (Me._DumpsterPUType.Equals(value) = false) Then
				Me.OnDumpsterPUTypeChanging(value)
				Me.SendPropertyChanging
				Me._DumpsterPUType = value
				Me.SendPropertyChanged("DumpsterPUType")
				Me.OnDumpsterPUTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DumpsterRental", DbType:="Float")>  _
	Public Property DumpsterRental() As System.Nullable(Of Double)
		Get
			Return Me._DumpsterRental
		End Get
		Set
			If (Me._DumpsterRental.Equals(value) = false) Then
				Me.OnDumpsterRentalChanging(value)
				Me.SendPropertyChanging
				Me._DumpsterRental = value
				Me.SendPropertyChanged("DumpsterRental")
				Me.OnDumpsterRentalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RollOffCharge", DbType:="Float")>  _
	Public Property RollOffCharge() As System.Nullable(Of Double)
		Get
			Return Me._RollOffCharge
		End Get
		Set
			If (Me._RollOffCharge.Equals(value) = false) Then
				Me.OnRollOffChargeChanging(value)
				Me.SendPropertyChanging
				Me._RollOffCharge = value
				Me.SendPropertyChanged("RollOffCharge")
				Me.OnRollOffChargeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RollOffRental", DbType:="Float")>  _
	Public Property RollOffRental() As System.Nullable(Of Double)
		Get
			Return Me._RollOffRental
		End Get
		Set
			If (Me._RollOffRental.Equals(value) = false) Then
				Me.OnRollOffRentalChanging(value)
				Me.SendPropertyChanging
				Me._RollOffRental = value
				Me.SendPropertyChanged("RollOffRental")
				Me.OnRollOffRentalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cart90GallonCharge", DbType:="Float")>  _
	Public Property Cart90GallonCharge() As System.Nullable(Of Double)
		Get
			Return Me._Cart90GallonCharge
		End Get
		Set
			If (Me._Cart90GallonCharge.Equals(value) = false) Then
				Me.OnCart90GallonChargeChanging(value)
				Me.SendPropertyChanging
				Me._Cart90GallonCharge = value
				Me.SendPropertyChanged("Cart90GallonCharge")
				Me.OnCart90GallonChargeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cart90GallonPUType", DbType:="Int")>  _
	Public Property Cart90GallonPUType() As System.Nullable(Of Integer)
		Get
			Return Me._Cart90GallonPUType
		End Get
		Set
			If (Me._Cart90GallonPUType.Equals(value) = false) Then
				Me.OnCart90GallonPUTypeChanging(value)
				Me.SendPropertyChanging
				Me._Cart90GallonPUType = value
				Me.SendPropertyChanged("Cart90GallonPUType")
				Me.OnCart90GallonPUTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cart90GallonRental", DbType:="Float")>  _
	Public Property Cart90GallonRental() As System.Nullable(Of Double)
		Get
			Return Me._Cart90GallonRental
		End Get
		Set
			If (Me._Cart90GallonRental.Equals(value) = false) Then
				Me.OnCart90GallonRentalChanging(value)
				Me.SendPropertyChanging
				Me._Cart90GallonRental = value
				Me.SendPropertyChanged("Cart90GallonRental")
				Me.OnCart90GallonRentalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CardboardCharge", DbType:="Float")>  _
	Public Property CardboardCharge() As System.Nullable(Of Double)
		Get
			Return Me._CardboardCharge
		End Get
		Set
			If (Me._CardboardCharge.Equals(value) = false) Then
				Me.OnCardboardChargeChanging(value)
				Me.SendPropertyChanging
				Me._CardboardCharge = value
				Me.SendPropertyChanged("CardboardCharge")
				Me.OnCardboardChargeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CardboardPUType", DbType:="Int")>  _
	Public Property CardboardPUType() As System.Nullable(Of Integer)
		Get
			Return Me._CardboardPUType
		End Get
		Set
			If (Me._CardboardPUType.Equals(value) = false) Then
				Me.OnCardboardPUTypeChanging(value)
				Me.SendPropertyChanging
				Me._CardboardPUType = value
				Me.SendPropertyChanged("CardboardPUType")
				Me.OnCardboardPUTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CardboardRental", DbType:="Float")>  _
	Public Property CardboardRental() As System.Nullable(Of Double)
		Get
			Return Me._CardboardRental
		End Get
		Set
			If (Me._CardboardRental.Equals(value) = false) Then
				Me.OnCardboardRentalChanging(value)
				Me.SendPropertyChanging
				Me._CardboardRental = value
				Me.SendPropertyChanged("CardboardRental")
				Me.OnCardboardRentalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RecycleCharge", DbType:="Float")>  _
	Public Property RecycleCharge() As System.Nullable(Of Double)
		Get
			Return Me._RecycleCharge
		End Get
		Set
			If (Me._RecycleCharge.Equals(value) = false) Then
				Me.OnRecycleChargeChanging(value)
				Me.SendPropertyChanging
				Me._RecycleCharge = value
				Me.SendPropertyChanged("RecycleCharge")
				Me.OnRecycleChargeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RecyclePUType", DbType:="Int")>  _
	Public Property RecyclePUType() As System.Nullable(Of Integer)
		Get
			Return Me._RecyclePUType
		End Get
		Set
			If (Me._RecyclePUType.Equals(value) = false) Then
				Me.OnRecyclePUTypeChanging(value)
				Me.SendPropertyChanging
				Me._RecyclePUType = value
				Me.SendPropertyChanged("RecyclePUType")
				Me.OnRecyclePUTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RecycleRental", DbType:="Float")>  _
	Public Property RecycleRental() As System.Nullable(Of Double)
		Get
			Return Me._RecycleRental
		End Get
		Set
			If (Me._RecycleRental.Equals(value) = false) Then
				Me.OnRecycleRentalChanging(value)
				Me.SendPropertyChanging
				Me._RecycleRental = value
				Me.SendPropertyChanged("RecycleRental")
				Me.OnRecycleRentalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PreviousMonthBilled", DbType:="Int")>  _
	Public Property PreviousMonthBilled() As System.Nullable(Of Integer)
		Get
			Return Me._PreviousMonthBilled
		End Get
		Set
			If (Me._PreviousMonthBilled.Equals(value) = false) Then
				Me.OnPreviousMonthBilledChanging(value)
				Me.SendPropertyChanging
				Me._PreviousMonthBilled = value
				Me.SendPropertyChanged("PreviousMonthBilled")
				Me.OnPreviousMonthBilledChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PONumber", DbType:="NVarChar(30)")>  _
	Public Property PONumber() As String
		Get
			Return Me._PONumber
		End Get
		Set
			If (String.Equals(Me._PONumber, value) = false) Then
				Me.OnPONumberChanging(value)
				Me.SendPropertyChanging
				Me._PONumber = value
				Me.SendPropertyChanged("PONumber")
				Me.OnPONumberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UsePONumberForAll", DbType:="Bit")>  _
	Public Property UsePONumberForAll() As System.Nullable(Of Boolean)
		Get
			Return Me._UsePONumberForAll
		End Get
		Set
			If (Me._UsePONumberForAll.Equals(value) = false) Then
				Me.OnUsePONumberForAllChanging(value)
				Me.SendPropertyChanging
				Me._UsePONumberForAll = value
				Me.SendPropertyChanged("UsePONumberForAll")
				Me.OnUsePONumberForAllChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PrintBill", DbType:="Bit NOT NULL")>  _
	Public Property PrintBill() As Boolean
		Get
			Return Me._PrintBill
		End Get
		Set
			If ((Me._PrintBill = value)  _
						= false) Then
				Me.OnPrintBillChanging(value)
				Me.SendPropertyChanging
				Me._PrintBill = value
				Me.SendPropertyChanged("PrintBill")
				Me.OnPrintBillChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Inactive", DbType:="Bit NOT NULL")>  _
	Public Property Inactive() As Boolean
		Get
			Return Me._Inactive
		End Get
		Set
			If ((Me._Inactive = value)  _
						= false) Then
				Me.OnInactiveChanging(value)
				Me.SendPropertyChanging
				Me._Inactive = value
				Me.SendPropertyChanged("Inactive")
				Me.OnInactiveChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SendToCollections", DbType:="Bit NOT NULL")>  _
	Public Property SendToCollections() As Boolean
		Get
			Return Me._SendToCollections
		End Get
		Set
			If ((Me._SendToCollections = value)  _
						= false) Then
				Me.OnSendToCollectionsChanging(value)
				Me.SendPropertyChanging
				Me._SendToCollections = value
				Me.SendPropertyChanged("SendToCollections")
				Me.OnSendToCollectionsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CollectionNotes", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property CollectionNotes() As String
		Get
			Return Me._CollectionNotes
		End Get
		Set
			If (String.Equals(Me._CollectionNotes, value) = false) Then
				Me.OnCollectionNotesChanging(value)
				Me.SendPropertyChanging
				Me._CollectionNotes = value
				Me.SendPropertyChanged("CollectionNotes")
				Me.OnCollectionNotesChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SpecialRoute", DbType:="Bit NOT NULL")>  _
	Public Property SpecialRoute() As Boolean
		Get
			Return Me._SpecialRoute
		End Get
		Set
			If ((Me._SpecialRoute = value)  _
						= false) Then
				Me.OnSpecialRouteChanging(value)
				Me.SendPropertyChanging
				Me._SpecialRoute = value
				Me.SendPropertyChanged("SpecialRoute")
				Me.OnSpecialRouteChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.RentalPayments")>  _
Partial Public Class RentalPayment
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _PaymentDate As Date
	
	Private _PaymentAmount As Decimal
	
	Private _CustomerID As Integer
	
	Private _MOP As Integer
	
	Private _CheckNumber As System.Nullable(Of Long)
	
	Private _Description As String
	
	Private _CreditCardAuthNumber As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnPaymentDateChanging(value As Date)
    End Sub
    Partial Private Sub OnPaymentDateChanged()
    End Sub
    Partial Private Sub OnPaymentAmountChanging(value As Decimal)
    End Sub
    Partial Private Sub OnPaymentAmountChanged()
    End Sub
    Partial Private Sub OnCustomerIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnCustomerIDChanged()
    End Sub
    Partial Private Sub OnMOPChanging(value As Integer)
    End Sub
    Partial Private Sub OnMOPChanged()
    End Sub
    Partial Private Sub OnCheckNumberChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnCheckNumberChanged()
    End Sub
    Partial Private Sub OnDescriptionChanging(value As String)
    End Sub
    Partial Private Sub OnDescriptionChanged()
    End Sub
    Partial Private Sub OnCreditCardAuthNumberChanging(value As String)
    End Sub
    Partial Private Sub OnCreditCardAuthNumberChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PaymentDate", DbType:="DateTime NOT NULL")>  _
	Public Property PaymentDate() As Date
		Get
			Return Me._PaymentDate
		End Get
		Set
			If ((Me._PaymentDate = value)  _
						= false) Then
				Me.OnPaymentDateChanging(value)
				Me.SendPropertyChanging
				Me._PaymentDate = value
				Me.SendPropertyChanged("PaymentDate")
				Me.OnPaymentDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PaymentAmount", DbType:="Money NOT NULL")>  _
	Public Property PaymentAmount() As Decimal
		Get
			Return Me._PaymentAmount
		End Get
		Set
			If ((Me._PaymentAmount = value)  _
						= false) Then
				Me.OnPaymentAmountChanging(value)
				Me.SendPropertyChanging
				Me._PaymentAmount = value
				Me.SendPropertyChanged("PaymentAmount")
				Me.OnPaymentAmountChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CustomerID", DbType:="Int NOT NULL")>  _
	Public Property CustomerID() As Integer
		Get
			Return Me._CustomerID
		End Get
		Set
			If ((Me._CustomerID = value)  _
						= false) Then
				Me.OnCustomerIDChanging(value)
				Me.SendPropertyChanging
				Me._CustomerID = value
				Me.SendPropertyChanged("CustomerID")
				Me.OnCustomerIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MOP", DbType:="Int NOT NULL")>  _
	Public Property MOP() As Integer
		Get
			Return Me._MOP
		End Get
		Set
			If ((Me._MOP = value)  _
						= false) Then
				Me.OnMOPChanging(value)
				Me.SendPropertyChanging
				Me._MOP = value
				Me.SendPropertyChanged("MOP")
				Me.OnMOPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CheckNumber", DbType:="BigInt")>  _
	Public Property CheckNumber() As System.Nullable(Of Long)
		Get
			Return Me._CheckNumber
		End Get
		Set
			If (Me._CheckNumber.Equals(value) = false) Then
				Me.OnCheckNumberChanging(value)
				Me.SendPropertyChanging
				Me._CheckNumber = value
				Me.SendPropertyChanged("CheckNumber")
				Me.OnCheckNumberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="NVarChar(MAX)")>  _
	Public Property Description() As String
		Get
			Return Me._Description
		End Get
		Set
			If (String.Equals(Me._Description, value) = false) Then
				Me.OnDescriptionChanging(value)
				Me.SendPropertyChanging
				Me._Description = value
				Me.SendPropertyChanged("Description")
				Me.OnDescriptionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreditCardAuthNumber", DbType:="NVarChar(30)")>  _
	Public Property CreditCardAuthNumber() As String
		Get
			Return Me._CreditCardAuthNumber
		End Get
		Set
			If (String.Equals(Me._CreditCardAuthNumber, value) = false) Then
				Me.OnCreditCardAuthNumberChanging(value)
				Me.SendPropertyChanging
				Me._CreditCardAuthNumber = value
				Me.SendPropertyChanged("CreditCardAuthNumber")
				Me.OnCreditCardAuthNumberChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Payments")>  _
Partial Public Class Payments
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _PaymentDate As Date
	
	Private _PaymentAmount As Decimal
	
	Private _CustomerID As Integer
	
	Private _MOP As Integer
	
	Private _CheckNumber As System.Nullable(Of Long)
	
	Private _Description As String
	
	Private _CreditCardAuthNumber As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnPaymentDateChanging(value As Date)
    End Sub
    Partial Private Sub OnPaymentDateChanged()
    End Sub
    Partial Private Sub OnPaymentAmountChanging(value As Decimal)
    End Sub
    Partial Private Sub OnPaymentAmountChanged()
    End Sub
    Partial Private Sub OnCustomerIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnCustomerIDChanged()
    End Sub
    Partial Private Sub OnMOPChanging(value As Integer)
    End Sub
    Partial Private Sub OnMOPChanged()
    End Sub
    Partial Private Sub OnCheckNumberChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnCheckNumberChanged()
    End Sub
    Partial Private Sub OnDescriptionChanging(value As String)
    End Sub
    Partial Private Sub OnDescriptionChanged()
    End Sub
    Partial Private Sub OnCreditCardAuthNumberChanging(value As String)
    End Sub
    Partial Private Sub OnCreditCardAuthNumberChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PaymentDate", DbType:="DateTime NOT NULL")>  _
	Public Property PaymentDate() As Date
		Get
			Return Me._PaymentDate
		End Get
		Set
			If ((Me._PaymentDate = value)  _
						= false) Then
				Me.OnPaymentDateChanging(value)
				Me.SendPropertyChanging
				Me._PaymentDate = value
				Me.SendPropertyChanged("PaymentDate")
				Me.OnPaymentDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PaymentAmount", DbType:="Money NOT NULL")>  _
	Public Property PaymentAmount() As Decimal
		Get
			Return Me._PaymentAmount
		End Get
		Set
			If ((Me._PaymentAmount = value)  _
						= false) Then
				Me.OnPaymentAmountChanging(value)
				Me.SendPropertyChanging
				Me._PaymentAmount = value
				Me.SendPropertyChanged("PaymentAmount")
				Me.OnPaymentAmountChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CustomerID", DbType:="Int NOT NULL")>  _
	Public Property CustomerID() As Integer
		Get
			Return Me._CustomerID
		End Get
		Set
			If ((Me._CustomerID = value)  _
						= false) Then
				Me.OnCustomerIDChanging(value)
				Me.SendPropertyChanging
				Me._CustomerID = value
				Me.SendPropertyChanged("CustomerID")
				Me.OnCustomerIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MOP", DbType:="Int NOT NULL")>  _
	Public Property MOP() As Integer
		Get
			Return Me._MOP
		End Get
		Set
			If ((Me._MOP = value)  _
						= false) Then
				Me.OnMOPChanging(value)
				Me.SendPropertyChanging
				Me._MOP = value
				Me.SendPropertyChanged("MOP")
				Me.OnMOPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CheckNumber", DbType:="BigInt")>  _
	Public Property CheckNumber() As System.Nullable(Of Long)
		Get
			Return Me._CheckNumber
		End Get
		Set
			If (Me._CheckNumber.Equals(value) = false) Then
				Me.OnCheckNumberChanging(value)
				Me.SendPropertyChanging
				Me._CheckNumber = value
				Me.SendPropertyChanged("CheckNumber")
				Me.OnCheckNumberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="NVarChar(MAX)")>  _
	Public Property Description() As String
		Get
			Return Me._Description
		End Get
		Set
			If (String.Equals(Me._Description, value) = false) Then
				Me.OnDescriptionChanging(value)
				Me.SendPropertyChanging
				Me._Description = value
				Me.SendPropertyChanged("Description")
				Me.OnDescriptionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreditCardAuthNumber", DbType:="NVarChar(30)")>  _
	Public Property CreditCardAuthNumber() As String
		Get
			Return Me._CreditCardAuthNumber
		End Get
		Set
			If (String.Equals(Me._CreditCardAuthNumber, value) = false) Then
				Me.OnCreditCardAuthNumberChanging(value)
				Me.SendPropertyChanging
				Me._CreditCardAuthNumber = value
				Me.SendPropertyChanged("CreditCardAuthNumber")
				Me.OnCreditCardAuthNumberChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
